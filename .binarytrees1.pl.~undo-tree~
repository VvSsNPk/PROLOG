(undo-tree-save-format-version . 1)
"cdc79a5f118a3000f04b5439c690e322f5733dfa"
[nil nil nil nil (25952 27890 104779 981000) 0 nil]
([nil nil ((604 . 605) (t 25950 16362 261335 142000)) nil (25952 27890 104777 536000) 0 nil])
([nil nil ((605 . 608)) nil (25952 27890 104776 139000) 0 nil])
([nil nil ((#("(" 0 1 (fontified nil)) . -606) (undo-tree-id1 . -1) (#(")" 0 1 (fontified t)) . 607)) nil (25952 27890 104774 254000) 0 nil])
([nil nil ((611 . 613) (608 . 612) (606 . 609)) nil (25952 27890 104771 879000) 0 nil])
([nil nil ((614 . 616)) nil (25952 27890 104770 412000) 0 nil])
([nil nil ((#("m" 0 1 (fontified t)) . -615) (undo-tree-id0 . -1) 616) nil (25952 27890 104768 527000) 0 nil])
([nil nil ((618 . 620) (615 . 619)) nil (25952 27890 104754 489000) 0 nil])
([nil nil ((622 . 623)) nil (25952 27890 104752 603000) 0 nil])
([nil nil ((623 . 624)) nil (25952 27890 104746 736000) 0 nil])
([nil nil ((#("(" 0 1 (fontified t)) . -461) (undo-tree-id405 . -1) (undo-tree-id406 . -1) (undo-tree-id407 . -1) (#("n" 0 1 (fontified t)) . -462) (undo-tree-id408 . -1) (undo-tree-id409 . -1) (undo-tree-id410 . -1) (#("3" 0 1 (fontified t)) . -463) (undo-tree-id411 . -1) (undo-tree-id412 . -1) (undo-tree-id413 . -1) (#("," 0 1 (fontified t)) . -464) (undo-tree-id414 . -1) (undo-tree-id415 . -1) (undo-tree-id416 . -1) (#("n" 0 1 (fontified t)) . -465) (undo-tree-id417 . -1) (undo-tree-id418 . -1) (undo-tree-id419 . -1) (#("9" 0 1 (fontified t)) . -466) (undo-tree-id420 . -1) (undo-tree-id421 . -1) (undo-tree-id422 . -1) (#(")" 0 1 (fontified t)) . -467) (undo-tree-id423 . -1) (undo-tree-id424 . -1) (undo-tree-id425 . -1) (#("." 0 1 (fontified t)) . -468) (undo-tree-id426 . -1) (undo-tree-id427 . -1) (undo-tree-id428 . -1) (#("
" 0 1 (fontified t)) . -469) (undo-tree-id429 . -1) (undo-tree-id430 . -1) (undo-tree-id431 . -1) (#("a" 0 1 (fontified t)) . -470) (undo-tree-id432 . -1) (undo-tree-id433 . -1) (undo-tree-id434 . -1) (#("r" 0 1 (fontified t)) . -471) (undo-tree-id435 . -1) (undo-tree-id436 . -1) (undo-tree-id437 . -1) (#("c" 0 1 (fontified t)) . -472) (undo-tree-id438 . -1) (undo-tree-id439 . -1) (undo-tree-id440 . -1) (#("(" 0 1 (fontified t)) . -473) (undo-tree-id441 . -1) (undo-tree-id442 . -1) (undo-tree-id443 . -1) (#("n" 0 1 (fontified t)) . -474) (undo-tree-id444 . -1) (undo-tree-id445 . -1) (undo-tree-id446 . -1) (#("9" 0 1 (fontified t)) . -475) (undo-tree-id447 . -1) (undo-tree-id448 . -1) (undo-tree-id449 . -1) (#("," 0 1 (fontified t)) . -476) (undo-tree-id450 . -1) (undo-tree-id451 . -1) (undo-tree-id452 . -1) (#("n" 0 1 (fontified t)) . -477) (undo-tree-id453 . -1) (undo-tree-id454 . -1) (undo-tree-id455 . -1) (#("1" 0 1 (fontified t)) . -478) (undo-tree-id456 . -1) (undo-tree-id457 . -1) (undo-tree-id458 . -1) (#("0" 0 1 (fontified t)) . -479) (undo-tree-id459 . -1) (undo-tree-id460 . -1) (undo-tree-id461 . -1) (#(")" 0 1 (fontified t)) . -480) (undo-tree-id462 . -1) (undo-tree-id463 . -1) (undo-tree-id464 . -1) (#("." 0 1 (fontified t)) . -481) (undo-tree-id465 . -1) (undo-tree-id466 . -1) (undo-tree-id467 . -1) 482 (t 25952 27890 131033 419000)) nil (25952 35333 605257 246000) 0 nil])
([nil nil ((#("," 0 1 (fontified t)) . -440) (undo-tree-id342 . -1) (undo-tree-id343 . -1) (undo-tree-id344 . -1) (#("n" 0 1 (fontified t)) . -441) (undo-tree-id345 . -1) (undo-tree-id346 . -1) (undo-tree-id347 . -1) (#("7" 0 1 (fontified t)) . -442) (undo-tree-id348 . -1) (undo-tree-id349 . -1) (undo-tree-id350 . -1) (#(")" 0 1 (fontified t)) . -443) (undo-tree-id351 . -1) (undo-tree-id352 . -1) (undo-tree-id353 . -1) (#("." 0 1 (fontified t)) . -444) (undo-tree-id354 . -1) (undo-tree-id355 . -1) (undo-tree-id356 . -1) (#("
" 0 1 (fontified t)) . -445) (undo-tree-id357 . -1) (undo-tree-id358 . -1) (undo-tree-id359 . -1) (#("a" 0 1 (fontified t)) . -446) (undo-tree-id360 . -1) (undo-tree-id361 . -1) (undo-tree-id362 . -1) (#("r" 0 1 (fontified t)) . -447) (undo-tree-id363 . -1) (undo-tree-id364 . -1) (undo-tree-id365 . -1) (#("c" 0 1 (fontified t)) . -448) (undo-tree-id366 . -1) (undo-tree-id367 . -1) (undo-tree-id368 . -1) (#("(" 0 1 (fontified t)) . -449) (undo-tree-id369 . -1) (undo-tree-id370 . -1) (undo-tree-id371 . -1) (#("n" 0 1 (fontified t)) . -450) (undo-tree-id372 . -1) (undo-tree-id373 . -1) (undo-tree-id374 . -1) (#("3" 0 1 (fontified t)) . -451) (undo-tree-id375 . -1) (undo-tree-id376 . -1) (undo-tree-id377 . -1) (#("," 0 1 (fontified t)) . -452) (undo-tree-id378 . -1) (undo-tree-id379 . -1) (undo-tree-id380 . -1) (#("n" 0 1 (fontified t)) . -453) (undo-tree-id381 . -1) (undo-tree-id382 . -1) (undo-tree-id383 . -1) (#("8" 0 1 (fontified t)) . -454) (undo-tree-id384 . -1) (undo-tree-id385 . -1) (undo-tree-id386 . -1) (#(")" 0 1 (fontified t)) . -455) (undo-tree-id387 . -1) (undo-tree-id388 . -1) (undo-tree-id389 . -1) (#("." 0 1 (fontified t)) . -456) (undo-tree-id390 . -1) (undo-tree-id391 . -1) (undo-tree-id392 . -1) (#("
" 0 1 (fontified t)) . -457) (undo-tree-id393 . -1) (undo-tree-id394 . -1) (undo-tree-id395 . -1) (#("a" 0 1 (fontified t)) . -458) (undo-tree-id396 . -1) (undo-tree-id397 . -1) (undo-tree-id398 . -1) (#("r" 0 1 (fontified t)) . -459) (undo-tree-id399 . -1) (undo-tree-id400 . -1) (undo-tree-id401 . -1) (#("c" 0 1 (fontified t)) . -460) (undo-tree-id402 . -1) (undo-tree-id403 . -1) (undo-tree-id404 . -1) 461) nil (25952 35333 605235 176000) 0 nil])
([nil nil ((#(")" 0 1 (fontified t)) . -419) (undo-tree-id279 . -1) (undo-tree-id280 . -1) (undo-tree-id281 . -1) (#("." 0 1 (fontified t)) . -420) (undo-tree-id282 . -1) (undo-tree-id283 . -1) (undo-tree-id284 . -1) (#("
" 0 1 (fontified t)) . -421) (undo-tree-id285 . -1) (undo-tree-id286 . -1) (undo-tree-id287 . -1) (#("a" 0 1 (fontified t)) . -422) (undo-tree-id288 . -1) (undo-tree-id289 . -1) (undo-tree-id290 . -1) (#("r" 0 1 (fontified t)) . -423) (undo-tree-id291 . -1) (undo-tree-id292 . -1) (undo-tree-id293 . -1) (#("c" 0 1 (fontified t)) . -424) (undo-tree-id294 . -1) (undo-tree-id295 . -1) (undo-tree-id296 . -1) (#("(" 0 1 (fontified t)) . -425) (undo-tree-id297 . -1) (undo-tree-id298 . -1) (undo-tree-id299 . -1) (#("n" 0 1 (fontified t)) . -426) (undo-tree-id300 . -1) (undo-tree-id301 . -1) (undo-tree-id302 . -1) (#("2" 0 1 (fontified t)) . -427) (undo-tree-id303 . -1) (undo-tree-id304 . -1) (undo-tree-id305 . -1) (#("," 0 1 (fontified t)) . -428) (undo-tree-id306 . -1) (undo-tree-id307 . -1) (undo-tree-id308 . -1) (#("n" 0 1 (fontified t)) . -429) (undo-tree-id309 . -1) (undo-tree-id310 . -1) (undo-tree-id311 . -1) (#("6" 0 1 (fontified t)) . -430) (undo-tree-id312 . -1) (undo-tree-id313 . -1) (undo-tree-id314 . -1) (#(")" 0 1 (fontified t)) . -431) (undo-tree-id315 . -1) (undo-tree-id316 . -1) (undo-tree-id317 . -1) (#("." 0 1 (fontified t)) . -432) (undo-tree-id318 . -1) (undo-tree-id319 . -1) (undo-tree-id320 . -1) (#("
" 0 1 (fontified t)) . -433) (undo-tree-id321 . -1) (undo-tree-id322 . -1) (undo-tree-id323 . -1) (#("a" 0 1 (fontified t)) . -434) (undo-tree-id324 . -1) (undo-tree-id325 . -1) (undo-tree-id326 . -1) (#("r" 0 1 (fontified t)) . -435) (undo-tree-id327 . -1) (undo-tree-id328 . -1) (undo-tree-id329 . -1) (#("c" 0 1 (fontified t)) . -436) (undo-tree-id330 . -1) (undo-tree-id331 . -1) (undo-tree-id332 . -1) (#("(" 0 1 (fontified t)) . -437) (undo-tree-id333 . -1) (undo-tree-id334 . -1) (undo-tree-id335 . -1) (#("n" 0 1 (fontified t)) . -438) (undo-tree-id336 . -1) (undo-tree-id337 . -1) (undo-tree-id338 . -1) (#("5" 0 1 (fontified t)) . -439) (undo-tree-id339 . -1) (undo-tree-id340 . -1) (undo-tree-id341 . -1) 440) nil (25952 35333 605210 662000) 0 nil])
([nil nil ((#("a" 0 1 (fontified t)) . -398) (undo-tree-id216 . -1) (undo-tree-id217 . -1) (undo-tree-id218 . -1) (#("r" 0 1 (fontified t)) . -399) (undo-tree-id219 . -1) (undo-tree-id220 . -1) (undo-tree-id221 . -1) (#("c" 0 1 (fontified t)) . -400) (undo-tree-id222 . -1) (undo-tree-id223 . -1) (undo-tree-id224 . -1) (#("(" 0 1 (fontified t)) . -401) (undo-tree-id225 . -1) (undo-tree-id226 . -1) (undo-tree-id227 . -1) (#("n" 0 1 (fontified t)) . -402) (undo-tree-id228 . -1) (undo-tree-id229 . -1) (undo-tree-id230 . -1) (#("2" 0 1 (fontified t)) . -403) (undo-tree-id231 . -1) (undo-tree-id232 . -1) (undo-tree-id233 . -1) (#("," 0 1 (fontified t)) . -404) (undo-tree-id234 . -1) (undo-tree-id235 . -1) (undo-tree-id236 . -1) (#("n" 0 1 (fontified t)) . -405) (undo-tree-id237 . -1) (undo-tree-id238 . -1) (undo-tree-id239 . -1) (#("4" 0 1 (fontified t)) . -406) (undo-tree-id240 . -1) (undo-tree-id241 . -1) (undo-tree-id242 . -1) (#(")" 0 1 (fontified t)) . -407) (undo-tree-id243 . -1) (undo-tree-id244 . -1) (undo-tree-id245 . -1) (#("." 0 1 (fontified t)) . -408) (undo-tree-id246 . -1) (undo-tree-id247 . -1) (undo-tree-id248 . -1) (#("
" 0 1 (fontified t)) . -409) (undo-tree-id249 . -1) (undo-tree-id250 . -1) (undo-tree-id251 . -1) (#("a" 0 1 (fontified t)) . -410) (undo-tree-id252 . -1) (undo-tree-id253 . -1) (undo-tree-id254 . -1) (#("r" 0 1 (fontified t)) . -411) (undo-tree-id255 . -1) (undo-tree-id256 . -1) (undo-tree-id257 . -1) (#("c" 0 1 (fontified t)) . -412) (undo-tree-id258 . -1) (undo-tree-id259 . -1) (undo-tree-id260 . -1) (#("(" 0 1 (fontified t)) . -413) (undo-tree-id261 . -1) (undo-tree-id262 . -1) (undo-tree-id263 . -1) (#("n" 0 1 (fontified t)) . -414) (undo-tree-id264 . -1) (undo-tree-id265 . -1) (undo-tree-id266 . -1) (#("2" 0 1 (fontified t)) . -415) (undo-tree-id267 . -1) (undo-tree-id268 . -1) (undo-tree-id269 . -1) (#("," 0 1 (fontified t)) . -416) (undo-tree-id270 . -1) (undo-tree-id271 . -1) (undo-tree-id272 . -1) (#("n" 0 1 (fontified t)) . -417) (undo-tree-id273 . -1) (undo-tree-id274 . -1) (undo-tree-id275 . -1) (#("5" 0 1 (fontified t)) . -418) (undo-tree-id276 . -1) (undo-tree-id277 . -1) (undo-tree-id278 . -1) 419) nil (25952 35333 605181 119000) 0 nil])
([nil nil ((#("(" 0 1 (fontified t)) . -377) (undo-tree-id153 . -1) (undo-tree-id154 . -1) (undo-tree-id155 . -1) (#("n" 0 1 (fontified t)) . -378) (undo-tree-id156 . -1) (undo-tree-id157 . -1) (undo-tree-id158 . -1) (#("1" 0 1 (fontified t)) . -379) (undo-tree-id159 . -1) (undo-tree-id160 . -1) (undo-tree-id161 . -1) (#("," 0 1 (fontified t)) . -380) (undo-tree-id162 . -1) (undo-tree-id163 . -1) (undo-tree-id164 . -1) (#("n" 0 1 (fontified t)) . -381) (undo-tree-id165 . -1) (undo-tree-id166 . -1) (undo-tree-id167 . -1) (#("2" 0 1 (fontified t)) . -382) (undo-tree-id168 . -1) (undo-tree-id169 . -1) (undo-tree-id170 . -1) (#(")" 0 1 (fontified t)) . -383) (undo-tree-id171 . -1) (undo-tree-id172 . -1) (undo-tree-id173 . -1) (#("." 0 1 (fontified t)) . -384) (undo-tree-id174 . -1) (undo-tree-id175 . -1) (undo-tree-id176 . -1) (#("
" 0 1 (fontified t)) . -385) (undo-tree-id177 . -1) (undo-tree-id178 . -1) (undo-tree-id179 . -1) (#("a" 0 1 (fontified t)) . -386) (undo-tree-id180 . -1) (undo-tree-id181 . -1) (undo-tree-id182 . -1) (#("r" 0 1 (fontified t)) . -387) (undo-tree-id183 . -1) (undo-tree-id184 . -1) (undo-tree-id185 . -1) (#("c" 0 1 (fontified t)) . -388) (undo-tree-id186 . -1) (undo-tree-id187 . -1) (undo-tree-id188 . -1) (#("(" 0 1 (fontified t)) . -389) (undo-tree-id189 . -1) (undo-tree-id190 . -1) (undo-tree-id191 . -1) (#("n" 0 1 (fontified t)) . -390) (undo-tree-id192 . -1) (undo-tree-id193 . -1) (undo-tree-id194 . -1) (#("1" 0 1 (fontified t)) . -391) (undo-tree-id195 . -1) (undo-tree-id196 . -1) (undo-tree-id197 . -1) (#("," 0 1 (fontified t)) . -392) (undo-tree-id198 . -1) (undo-tree-id199 . -1) (undo-tree-id200 . -1) (#("n" 0 1 (fontified t)) . -393) (undo-tree-id201 . -1) (undo-tree-id202 . -1) (undo-tree-id203 . -1) (#("3" 0 1 (fontified t)) . -394) (undo-tree-id204 . -1) (undo-tree-id205 . -1) (undo-tree-id206 . -1) (#(")" 0 1 (fontified t)) . -395) (undo-tree-id207 . -1) (undo-tree-id208 . -1) (undo-tree-id209 . -1) (#("." 0 1 (fontified t)) . -396) (undo-tree-id210 . -1) (undo-tree-id211 . -1) (undo-tree-id212 . -1) (#("
" 0 1 (fontified t)) . -397) (undo-tree-id213 . -1) (undo-tree-id214 . -1) (undo-tree-id215 . -1) 398) nil (25952 35333 605154 859000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . -373) (undo-tree-id141 . -1) (undo-tree-id142 . -1) (undo-tree-id143 . -1) (#("a" 0 1 (fontified t)) . -374) (undo-tree-id144 . -1) (undo-tree-id145 . -1) (undo-tree-id146 . -1) (#("r" 0 1 (fontified t)) . -375) (undo-tree-id147 . -1) (undo-tree-id148 . -1) (undo-tree-id149 . -1) (#("c" 0 1 (fontified t)) . -376) (undo-tree-id150 . -1) (undo-tree-id151 . -1) (undo-tree-id152 . -1) 377) nil (25952 35333 605135 163000) 0 nil])
([nil nil ((#("." 0 1 (fontified t)) . -493) (undo-tree-id120 . -1) (#("
" 0 1 (fontified t)) . -494) (undo-tree-id121 . -1) (#("
" 0 1 (fontified t)) . -495) (undo-tree-id122 . -1) (#("n" 0 1 (fontified t)) . -496) (undo-tree-id123 . -1) (#("1" 0 1 (fontified t)) . -497) (undo-tree-id124 . -1) (#("(" 0 1 (fontified t)) . -498) (undo-tree-id125 . -1) (#("n" 0 1 (fontified t)) . -499) (undo-tree-id126 . -1) (#("2" 0 1 (fontified t)) . -500) (undo-tree-id127 . -1) (#("(" 0 1 (fontified t)) . -501) (undo-tree-id128 . -1) (#("n" 0 1 (fontified t)) . -502) (undo-tree-id129 . -1) (#("3" 0 1 (fontified t)) . -503) (undo-tree-id130 . -1) (#(")" 0 1 (fontified t)) . -504) (undo-tree-id131 . -1) (#("," 0 1 (fontified t)) . -505) (undo-tree-id132 . -1) (#("n" 0 1 (fontified t)) . -506) (undo-tree-id133 . -1) (#("4" 0 1 (fontified t)) . -507) (undo-tree-id134 . -1) (#("(" 0 1 (fontified t)) . -508) (undo-tree-id135 . -1) (#("n" 0 1 (fontified t)) . -509) (undo-tree-id136 . -1) (#("6" 0 1 (fontified t)) . -510) (undo-tree-id137 . -1) (#(")" 0 1 (fontified t)) . -511) (undo-tree-id138 . -1) (#(")" 0 1 (fontified t)) . -512) (undo-tree-id139 . -1) (#("." 0 1 (fontified t)) . -513) (undo-tree-id140 . -1) 514) nil (25952 35333 605123 360000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -472) (undo-tree-id99 . -1) (#(" " 0 1 (fontified t)) . -473) (undo-tree-id100 . -1) (#("p" 0 1 (fontified t)) . -474) (undo-tree-id101 . -1) (#("a" 0 1 (fontified t)) . -475) (undo-tree-id102 . -1) (#("t" 0 1 (fontified t)) . -476) (undo-tree-id103 . -1) (#("h" 0 1 (fontified t)) . -477) (undo-tree-id104 . -1) (#("(" 0 1 (fontified t)) . -478) (undo-tree-id105 . -1) (#("[" 0 1 (face font-lock-keyword-face fontified t)) . -479) (undo-tree-id106 . -1) (#("N" 0 1 (face font-lock-variable-name-face fontified t)) . -480) (undo-tree-id107 . -1) (#("o" 0 1 (face font-lock-variable-name-face fontified t)) . -481) (undo-tree-id108 . -1) (#("d" 0 1 (face font-lock-variable-name-face fontified t)) . -482) (undo-tree-id109 . -1) (#("e" 0 1 (face font-lock-variable-name-face fontified t)) . -483) (undo-tree-id110 . -1) (#("2" 0 1 (face font-lock-variable-name-face fontified t)) . -484) (undo-tree-id111 . -1) (#("|" 0 1 (face font-lock-keyword-face fontified t)) . -485) (undo-tree-id112 . -1) (#("N" 0 1 (face font-lock-variable-name-face fontified t)) . -486) (undo-tree-id113 . -1) (#("o" 0 1 (face font-lock-variable-name-face fontified t)) . -487) (undo-tree-id114 . -1) (#("d" 0 1 (face font-lock-variable-name-face fontified t)) . -488) (undo-tree-id115 . -1) (#("e" 0 1 (face font-lock-variable-name-face fontified t)) . -489) (undo-tree-id116 . -1) (#("s" 0 1 (face font-lock-variable-name-face fontified t)) . -490) (undo-tree-id117 . -1) (#("]" 0 1 (face font-lock-keyword-face fontified t)) . -491) (undo-tree-id118 . -1) (#(")" 0 1 (fontified t)) . -492) (undo-tree-id119 . -1) 493) nil (25952 35333 605114 281000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -451) (undo-tree-id78 . -1) (#("a" 0 1 (fontified t)) . -452) (undo-tree-id79 . -1) (#("r" 0 1 (fontified t)) . -453) (undo-tree-id80 . -1) (#("c" 0 1 (fontified t)) . -454) (undo-tree-id81 . -1) (#("(" 0 1 (fontified t)) . -455) (undo-tree-id82 . -1) (#("N" 0 1 (face font-lock-variable-name-face fontified t)) . -456) (undo-tree-id83 . -1) (#("o" 0 1 (face font-lock-variable-name-face fontified t)) . -457) (undo-tree-id84 . -1) (#("d" 0 1 (face font-lock-variable-name-face fontified t)) . -458) (undo-tree-id85 . -1) (#("e" 0 1 (face font-lock-variable-name-face fontified t)) . -459) (undo-tree-id86 . -1) (#("1" 0 1 (face font-lock-variable-name-face fontified t)) . -460) (undo-tree-id87 . -1) (#("," 0 1 (fontified t)) . -461) (undo-tree-id88 . -1) (#("N" 0 1 (face font-lock-variable-name-face fontified t)) . -462) (undo-tree-id89 . -1) (#("o" 0 1 (face font-lock-variable-name-face fontified t)) . -463) (undo-tree-id90 . -1) (#("d" 0 1 (face font-lock-variable-name-face fontified t)) . -464) (undo-tree-id91 . -1) (#("e" 0 1 (face font-lock-variable-name-face fontified t)) . -465) (undo-tree-id92 . -1) (#("2" 0 1 (face font-lock-variable-name-face fontified t)) . -466) (undo-tree-id93 . -1) (#(")" 0 1 (fontified t)) . -467) (undo-tree-id94 . -1) (#("," 0 1 (fontified t)) . -468) (undo-tree-id95 . -1) (#("
" 0 1 (fontified t)) . -469) (undo-tree-id96 . -1) (#(" " 0 1 (fontified t)) . -470) (undo-tree-id97 . -1) (#(" " 0 1 (fontified t)) . -471) (undo-tree-id98 . -1) 472) nil (25952 35333 605106 40000) 0 nil])
([nil nil ((#("1" 0 1 (face font-lock-variable-name-face fontified t)) . -430) (undo-tree-id57 . -1) (#("," 0 1 (fontified t)) . -431) (undo-tree-id58 . -1) (#("N" 0 1 (face font-lock-variable-name-face fontified t)) . -432) (undo-tree-id59 . -1) (#("o" 0 1 (face font-lock-variable-name-face fontified t)) . -433) (undo-tree-id60 . -1) (#("d" 0 1 (face font-lock-variable-name-face fontified t)) . -434) (undo-tree-id61 . -1) (#("e" 0 1 (face font-lock-variable-name-face fontified t)) . -435) (undo-tree-id62 . -1) (#("2" 0 1 (face font-lock-variable-name-face fontified t)) . -436) (undo-tree-id63 . -1) (#("|" 0 1 (face font-lock-keyword-face fontified t)) . -437) (undo-tree-id64 . -1) (#("N" 0 1 (face font-lock-variable-name-face fontified t)) . -438) (undo-tree-id65 . -1) (#("o" 0 1 (face font-lock-variable-name-face fontified t)) . -439) (undo-tree-id66 . -1) (#("d" 0 1 (face font-lock-variable-name-face fontified t)) . -440) (undo-tree-id67 . -1) (#("e" 0 1 (face font-lock-variable-name-face fontified t)) . -441) (undo-tree-id68 . -1) (#("s" 0 1 (face font-lock-variable-name-face fontified t)) . -442) (undo-tree-id69 . -1) (#("]" 0 1 (face font-lock-keyword-face fontified t)) . -443) (undo-tree-id70 . -1) (#(")" 0 1 (fontified t)) . -444) (undo-tree-id71 . -1) (#(":" 0 1 (fontified t)) . -445) (undo-tree-id72 . -1) (#("-" 0 1 (fontified t)) . -446) (undo-tree-id73 . -1) (#("
" 0 1 (fontified t)) . -447) (undo-tree-id74 . -1) (#(" " 0 1 (fontified t)) . -448) (undo-tree-id75 . -1) (#(" " 0 1 (fontified t)) . -449) (undo-tree-id76 . -1) (#(" " 0 1 (fontified t)) . -450) (undo-tree-id77 . -1) 451) nil (25952 35333 605070 351000) 0 nil])
([nil nil ((#("e" 0 1 (face font-lock-variable-name-face fontified t)) . -409) (undo-tree-id36 . -1) (#("1" 0 1 (face font-lock-variable-name-face fontified t)) . -410) (undo-tree-id37 . -1) (#("," 0 1 (fontified t)) . -411) (undo-tree-id38 . -1) (#("N" 0 1 (face font-lock-variable-name-face fontified t)) . -412) (undo-tree-id39 . -1) (#("o" 0 1 (face font-lock-variable-name-face fontified t)) . -413) (undo-tree-id40 . -1) (#("d" 0 1 (face font-lock-variable-name-face fontified t)) . -414) (undo-tree-id41 . -1) (#("e" 0 1 (face font-lock-variable-name-face fontified t)) . -415) (undo-tree-id42 . -1) (#("2" 0 1 (face font-lock-variable-name-face fontified t)) . -416) (undo-tree-id43 . -1) (#(")" 0 1 (fontified t)) . -417) (undo-tree-id44 . -1) (#("." 0 1 (fontified t)) . -418) (undo-tree-id45 . -1) (#("
" 0 1 (fontified t)) . -419) (undo-tree-id46 . -1) (#("p" 0 1 (fontified t)) . -420) (undo-tree-id47 . -1) (#("a" 0 1 (fontified t)) . -421) (undo-tree-id48 . -1) (#("t" 0 1 (fontified t)) . -422) (undo-tree-id49 . -1) (#("h" 0 1 (fontified t)) . -423) (undo-tree-id50 . -1) (#("(" 0 1 (fontified t)) . -424) (undo-tree-id51 . -1) (#("[" 0 1 (face font-lock-keyword-face fontified t)) . -425) (undo-tree-id52 . -1) (#("N" 0 1 (face font-lock-variable-name-face fontified t)) . -426) (undo-tree-id53 . -1) (#("o" 0 1 (face font-lock-variable-name-face fontified t)) . -427) (undo-tree-id54 . -1) (#("d" 0 1 (face font-lock-variable-name-face fontified t)) . -428) (undo-tree-id55 . -1) (#("e" 0 1 (face font-lock-variable-name-face fontified t)) . -429) (undo-tree-id56 . -1) 430) nil (25952 35333 605060 363000) 0 nil])
([nil nil ((#("o" 0 1 (face font-lock-variable-name-face fontified t)) . -388) (undo-tree-id15 . -1) (#("d" 0 1 (face font-lock-variable-name-face fontified t)) . -389) (undo-tree-id16 . -1) (#("e" 0 1 (face font-lock-variable-name-face fontified t)) . -390) (undo-tree-id17 . -1) (#("2" 0 1 (face font-lock-variable-name-face fontified t)) . -391) (undo-tree-id18 . -1) (#("]" 0 1 (face font-lock-keyword-face fontified t)) . -392) (undo-tree-id19 . -1) (#(")" 0 1 (fontified t)) . -393) (undo-tree-id20 . -1) (#(" " 0 1 (fontified t)) . -394) (undo-tree-id21 . -1) (#(":" 0 1 (fontified t)) . -395) (undo-tree-id22 . -1) (#("-" 0 1 (fontified t)) . -396) (undo-tree-id23 . -1) (#("
" 0 1 (fontified t)) . -397) (undo-tree-id24 . -1) (#(" " 0 1 (fontified nil)) . -398) (undo-tree-id25 . -1) (#(" " 0 1 (fontified t)) . -399) (undo-tree-id26 . -1) (#(" " 0 1 (fontified t)) . -400) (undo-tree-id27 . -1) (#(" " 0 1 (fontified t)) . -401) (undo-tree-id28 . -1) (#("a" 0 1 (fontified t)) . -402) (undo-tree-id29 . -1) (#("r" 0 1 (fontified t)) . -403) (undo-tree-id30 . -1) (#("c" 0 1 (fontified t)) . -404) (undo-tree-id31 . -1) (#("(" 0 1 (fontified t)) . -405) (undo-tree-id32 . -1) (#("N" 0 1 (face font-lock-variable-name-face fontified t)) . -406) (undo-tree-id33 . -1) (#("o" 0 1 (face font-lock-variable-name-face fontified t)) . -407) (undo-tree-id34 . -1) (#("d" 0 1 (face font-lock-variable-name-face fontified t)) . -408) (undo-tree-id35 . -1) 409) nil (25952 35333 605051 773000) 0 nil])
([nil current ((#("
" 0 1 (fontified t)) . -374) (undo-tree-id0 . -1) (undo-tree-id1 . -1) (#("p" 0 1 (fontified t)) . -375) (undo-tree-id2 . -1) (#("a" 0 1 (fontified t)) . -376) (undo-tree-id3 . -1) (#("t" 0 1 (fontified t)) . -377) (undo-tree-id4 . -1) (#("h" 0 1 (fontified t)) . -378) (undo-tree-id5 . -1) (#("(" 0 1 (fontified t)) . -379) (undo-tree-id6 . -1) (#("[" 0 1 (face font-lock-keyword-face fontified t)) . -380) (undo-tree-id7 . -1) (#("N" 0 1 (face font-lock-variable-name-face fontified t)) . -381) (undo-tree-id8 . -1) (#("o" 0 1 (face font-lock-variable-name-face fontified t)) . -382) (undo-tree-id9 . -1) (#("d" 0 1 (face font-lock-variable-name-face fontified t)) . -383) (undo-tree-id10 . -1) (#("e" 0 1 (face font-lock-variable-name-face fontified t)) . -384) (undo-tree-id11 . -1) (#("1" 0 1 (face font-lock-variable-name-face fontified t)) . -385) (undo-tree-id12 . -1) (#("," 0 1 (fontified t)) . -386) (undo-tree-id13 . -1) (#("N" 0 1 (face font-lock-variable-name-face fontified t)) . -387) (undo-tree-id14 . -1) 388) nil (25952 35333 605040 249000) 0 nil])
nil
