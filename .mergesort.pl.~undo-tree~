(undo-tree-save-format-version . 1)
"d1f8740a8aec0ced8668d5e0feef4bc682384ed9"
[nil nil nil nil (25937 8512 213230 522000) 0 nil]
([nil nil ((7 . 9) (4 . 8) (1 . 1) (1 . 4) (t . -1)) nil (25937 8512 213228 637000) 0 nil])
([nil nil ((9 . 12)) nil (25937 8512 213227 240000) 0 nil])
([nil nil ((#("[" 0 1 (face font-lock-keyword-face fontified t)) . -10) (undo-tree-id347 . -1) (#("]" 0 1 (face font-lock-keyword-face fontified t)) . -11) (undo-tree-id348 . -1) 12) nil (25937 8512 213225 843000) 0 nil])
([nil nil ((10 . 12)) nil (25937 8512 213223 468000) 0 nil])
([nil nil ((12 . 15)) nil (25937 8512 213222 71000) 0 nil])
([nil nil ((16 . 17)) nil (25937 8512 213221 164000) 0 nil])
([nil nil ((17 . 18)) nil (25937 8512 213219 697000) 0 nil])
([nil nil ((10 . 13) (4 . 11) (1 . 1) (1 . 4) (#("s" 0 1 (fontified t)) . -1) (undo-tree-id6 . -1) (undo-tree-id7 . -1) (undo-tree-id8 . -1) (undo-tree-id9 . -1) (undo-tree-id10 . -1) (undo-tree-id11 . -1) (undo-tree-id12 . -1) (undo-tree-id13 . -1) (undo-tree-id14 . -1) (undo-tree-id15 . -1) (undo-tree-id16 . -1) (undo-tree-id17 . -1) (undo-tree-id18 . -1) (undo-tree-id19 . -1) (undo-tree-id20 . -1) (undo-tree-id21 . -1) (undo-tree-id22 . -1) (undo-tree-id23 . -1) (undo-tree-id24 . -1) (undo-tree-id25 . -1) (undo-tree-id26 . -1) (undo-tree-id27 . -1) (undo-tree-id28 . -1) (undo-tree-id29 . -1) (undo-tree-id30 . -1) (undo-tree-id31 . -1) (undo-tree-id32 . -1) (undo-tree-id33 . -1) (undo-tree-id34 . -1) (undo-tree-id35 . -1) (undo-tree-id36 . -1) (undo-tree-id37 . -1) (undo-tree-id38 . -1) (undo-tree-id39 . -1) (undo-tree-id40 . -1) (undo-tree-id41 . -1) (undo-tree-id42 . -1) (undo-tree-id43 . -1) (undo-tree-id44 . -1) (undo-tree-id45 . -1) (undo-tree-id46 . -1) (undo-tree-id47 . -1) (undo-tree-id48 . -1) (undo-tree-id49 . -1) (undo-tree-id50 . -1) (undo-tree-id51 . -1) (undo-tree-id52 . -1) (undo-tree-id53 . -1) (undo-tree-id54 . -1) (undo-tree-id55 . -1) (undo-tree-id56 . -1) (undo-tree-id57 . -1) (undo-tree-id58 . -1) (undo-tree-id59 . -1) (undo-tree-id60 . -1) (undo-tree-id61 . -1) (undo-tree-id62 . -1) (undo-tree-id63 . -1) (undo-tree-id64 . -1) (undo-tree-id65 . -1) (undo-tree-id66 . -1) (undo-tree-id67 . -1) (undo-tree-id68 . -1) (undo-tree-id69 . -1) (undo-tree-id70 . -1) (undo-tree-id71 . -1) (undo-tree-id72 . -1) (undo-tree-id73 . -1) (undo-tree-id74 . -1) (#("p" 0 1 (fontified t)) . -2) (undo-tree-id75 . -1) (undo-tree-id76 . -1) (undo-tree-id77 . -1) (undo-tree-id78 . -1) (undo-tree-id79 . -1) (undo-tree-id80 . -1) (undo-tree-id81 . -1) (undo-tree-id82 . -1) (undo-tree-id83 . -1) (undo-tree-id84 . -1) (undo-tree-id85 . -1) (undo-tree-id86 . -1) (undo-tree-id87 . -1) (undo-tree-id88 . -1) (undo-tree-id89 . -1) (undo-tree-id90 . -1) (undo-tree-id91 . -1) (undo-tree-id92 . -1) (undo-tree-id93 . -1) (undo-tree-id94 . -1) (undo-tree-id95 . -1) (undo-tree-id96 . -1) (undo-tree-id97 . -1) (undo-tree-id98 . -1) (undo-tree-id99 . -1) (undo-tree-id100 . -1) (undo-tree-id101 . -1) (undo-tree-id102 . -1) (undo-tree-id103 . -1) (undo-tree-id104 . -1) (undo-tree-id105 . -1) (undo-tree-id106 . -1) (undo-tree-id107 . -1) (undo-tree-id108 . -1) (undo-tree-id109 . -1) (undo-tree-id110 . -1) (undo-tree-id111 . -1) (undo-tree-id112 . -1) (undo-tree-id113 . -1) (undo-tree-id114 . -1) (undo-tree-id115 . -1) (undo-tree-id116 . -1) (undo-tree-id117 . -1) (undo-tree-id118 . -1) (undo-tree-id119 . -1) (undo-tree-id120 . -1) (undo-tree-id121 . -1) (undo-tree-id122 . -1) (undo-tree-id123 . -1) (undo-tree-id124 . -1) (undo-tree-id125 . -1) (undo-tree-id126 . -1) (undo-tree-id127 . -1) (undo-tree-id128 . -1) (undo-tree-id129 . -1) (undo-tree-id130 . -1) (undo-tree-id131 . -1) (undo-tree-id132 . -1) (undo-tree-id133 . -1) (undo-tree-id134 . -1) (undo-tree-id135 . -1) (#("l" 0 1 (fontified t)) . -3) (undo-tree-id136 . -1) (undo-tree-id137 . -1) (undo-tree-id138 . -1) (undo-tree-id139 . -1) (undo-tree-id140 . -1) (undo-tree-id141 . -1) (undo-tree-id142 . -1) (undo-tree-id143 . -1) (undo-tree-id144 . -1) (undo-tree-id145 . -1) (undo-tree-id146 . -1) (undo-tree-id147 . -1) (undo-tree-id148 . -1) (undo-tree-id149 . -1) (undo-tree-id150 . -1) (undo-tree-id151 . -1) (undo-tree-id152 . -1) (undo-tree-id153 . -1) (undo-tree-id154 . -1) (undo-tree-id155 . -1) (undo-tree-id156 . -1) (undo-tree-id157 . -1) (undo-tree-id158 . -1) (undo-tree-id159 . -1) (undo-tree-id160 . -1) (undo-tree-id161 . -1) (undo-tree-id162 . -1) (undo-tree-id163 . -1) (undo-tree-id164 . -1) (undo-tree-id165 . -1) (undo-tree-id166 . -1) (undo-tree-id167 . -1) (undo-tree-id168 . -1) (undo-tree-id169 . -1) (undo-tree-id170 . -1) (undo-tree-id171 . -1) (undo-tree-id172 . -1) (undo-tree-id173 . -1) (undo-tree-id174 . -1) (undo-tree-id175 . -1) (undo-tree-id176 . -1) (undo-tree-id177 . -1) (undo-tree-id178 . -1) (undo-tree-id179 . -1) (undo-tree-id180 . -1) (undo-tree-id181 . -1) (undo-tree-id182 . -1) (undo-tree-id183 . -1) (undo-tree-id184 . -1) (undo-tree-id185 . -1) (undo-tree-id186 . -1) (undo-tree-id187 . -1) (undo-tree-id188 . -1) (#("i" 0 1 (fontified t)) . -4) (undo-tree-id189 . -1) (undo-tree-id190 . -1) (undo-tree-id191 . -1) (undo-tree-id192 . -1) (undo-tree-id193 . -1) (undo-tree-id194 . -1) (undo-tree-id195 . -1) (undo-tree-id196 . -1) (undo-tree-id197 . -1) (undo-tree-id198 . -1) (undo-tree-id199 . -1) (undo-tree-id200 . -1) (undo-tree-id201 . -1) (undo-tree-id202 . -1) (undo-tree-id203 . -1) (undo-tree-id204 . -1) (undo-tree-id205 . -1) (undo-tree-id206 . -1) (undo-tree-id207 . -1) (undo-tree-id208 . -1) (undo-tree-id209 . -1) (undo-tree-id210 . -1) (undo-tree-id211 . -1) (undo-tree-id212 . -1) (undo-tree-id213 . -1) (undo-tree-id214 . -1) (undo-tree-id215 . -1) (undo-tree-id216 . -1) (undo-tree-id217 . -1) (undo-tree-id218 . -1) (undo-tree-id219 . -1) (undo-tree-id220 . -1) (undo-tree-id221 . -1) (undo-tree-id222 . -1) (undo-tree-id223 . -1) (undo-tree-id224 . -1) (undo-tree-id225 . -1) (undo-tree-id226 . -1) (undo-tree-id227 . -1) (undo-tree-id228 . -1) (undo-tree-id229 . -1) (undo-tree-id230 . -1) (undo-tree-id231 . -1) (undo-tree-id232 . -1) (undo-tree-id233 . -1) (#("t" 0 1 (fontified t)) . -5) (undo-tree-id234 . -1) (undo-tree-id235 . -1) (undo-tree-id236 . -1) (undo-tree-id237 . -1) (undo-tree-id238 . -1) (undo-tree-id239 . -1) (undo-tree-id240 . -1) (undo-tree-id241 . -1) (undo-tree-id242 . -1) (undo-tree-id243 . -1) (undo-tree-id244 . -1) (undo-tree-id245 . -1) (undo-tree-id246 . -1) (undo-tree-id247 . -1) (undo-tree-id248 . -1) (undo-tree-id249 . -1) (undo-tree-id250 . -1) (undo-tree-id251 . -1) (undo-tree-id252 . -1) (undo-tree-id253 . -1) (undo-tree-id254 . -1) (undo-tree-id255 . -1) (undo-tree-id256 . -1) (undo-tree-id257 . -1) (undo-tree-id258 . -1) (undo-tree-id259 . -1) (undo-tree-id260 . -1) (undo-tree-id261 . -1) (undo-tree-id262 . -1) (undo-tree-id263 . -1) (undo-tree-id264 . -1) (undo-tree-id265 . -1) (undo-tree-id266 . -1) (undo-tree-id267 . -1) (undo-tree-id268 . -1) (undo-tree-id269 . -1) (undo-tree-id270 . -1) (#("(" 0 1 (fontified t)) . -6) (undo-tree-id271 . -1) (undo-tree-id272 . -1) (undo-tree-id273 . -1) (undo-tree-id274 . -1) (undo-tree-id275 . -1) (undo-tree-id276 . -1) (undo-tree-id277 . -1) (undo-tree-id278 . -1) (undo-tree-id279 . -1) (undo-tree-id280 . -1) (undo-tree-id281 . -1) (undo-tree-id282 . -1) (undo-tree-id283 . -1) (undo-tree-id284 . -1) (undo-tree-id285 . -1) (undo-tree-id286 . -1) (undo-tree-id287 . -1) (undo-tree-id288 . -1) (undo-tree-id289 . -1) (undo-tree-id290 . -1) (undo-tree-id291 . -1) (undo-tree-id292 . -1) (undo-tree-id293 . -1) (undo-tree-id294 . -1) (undo-tree-id295 . -1) (undo-tree-id296 . -1) (undo-tree-id297 . -1) (undo-tree-id298 . -1) (undo-tree-id299 . -1) (#("[" 0 1 (face font-lock-keyword-face fontified t)) . -7) (undo-tree-id300 . -1) (undo-tree-id301 . -1) (undo-tree-id302 . -1) (undo-tree-id303 . -1) (undo-tree-id304 . -1) (undo-tree-id305 . -1) (undo-tree-id306 . -1) (undo-tree-id307 . -1) (undo-tree-id308 . -1) (undo-tree-id309 . -1) (undo-tree-id310 . -1) (undo-tree-id311 . -1) (undo-tree-id312 . -1) (undo-tree-id313 . -1) (undo-tree-id314 . -1) (undo-tree-id315 . -1) (undo-tree-id316 . -1) (undo-tree-id317 . -1) (undo-tree-id318 . -1) (undo-tree-id319 . -1) (undo-tree-id320 . -1) (#("]" 0 1 (face font-lock-keyword-face fontified t)) . -8) (undo-tree-id321 . -1) (undo-tree-id322 . -1) (undo-tree-id323 . -1) (undo-tree-id324 . -1) (undo-tree-id325 . -1) (undo-tree-id326 . -1) (undo-tree-id327 . -1) (undo-tree-id328 . -1) (undo-tree-id329 . -1) (undo-tree-id330 . -1) (undo-tree-id331 . -1) (undo-tree-id332 . -1) (undo-tree-id333 . -1) (#("," 0 1 (fontified t)) . -9) (undo-tree-id334 . -1) (undo-tree-id335 . -1) (undo-tree-id336 . -1) (undo-tree-id337 . -1) (undo-tree-id338 . -1) (#("[" 0 1 (face font-lock-keyword-face fontified t)) . -10) (undo-tree-id339 . -1) (#("]" 0 1 (face font-lock-keyword-face fontified t)) . -11) (undo-tree-id340 . -1) (#("," 0 1 (fontified t)) . -12) (undo-tree-id341 . -1) (#("[" 0 1 (face font-lock-keyword-face fontified t)) . -13) (undo-tree-id342 . -1) (#("]" 0 1 (face font-lock-keyword-face fontified t)) . -14) (undo-tree-id343 . -1) (#(")" 0 1 (fontified t)) . -15) (undo-tree-id344 . -1) (#("." 0 1 (fontified t)) . -16) (undo-tree-id345 . -1) (#("
" 0 1 (fontified t)) . -17) (undo-tree-id346 . -1) 18) nil (25937 8512 213213 970000) 0 nil])
([nil nil ((#("L" 0 1 (face font-lock-variable-name-face fontified t)) . -10) (undo-tree-id2 . -1) (#("," 0 1 (fontified t)) . -11) (undo-tree-id3 . -1) (#("X" 0 1 (face font-lock-variable-name-face fontified t)) . -12) (undo-tree-id4 . -1) (#(")" 0 1 (fontified t)) . -13) (undo-tree-id5 . -1) 14) nil (25937 8512 213084 134000) 0 nil])
([nil nil ((10 . 12)) nil (25937 8512 213081 271000) 0 nil])
([nil nil ((14 . 16) (#(")" 0 1 (fontified nil)) . -14) (12 . 15)) nil (25937 8512 213079 874000) 0 nil])
([nil nil ((16 . 17)) nil (25937 8512 213078 407000) 0 nil])
([nil nil ((20 . 21) (17 . 17) (17 . 20)) nil (25937 8512 213077 499000) 0 nil])
([nil nil ((27 . 30) (26 . 28) (21 . 27)) nil (25937 8512 213076 33000) 0 nil])
([nil nil ((31 . 33)) nil (25937 8512 213074 636000) 0 nil])
([nil nil ((34 . 38)) nil (25937 8512 213073 239000) 0 nil])
([nil nil ((#("g" 0 1 (face font-lock-function-name-face fontified t)) . -24) (undo-tree-id1 . -1) 25) nil (25937 8512 213071 842000) 0 nil])
([nil nil ((24 . 25)) nil (25937 8512 213069 957000) 0 nil])
([nil nil ((37 . 47)) nil (25937 8512 213068 560000) 0 nil])
([nil nil ((#("/" 0 1 (fontified t)) . -46) (undo-tree-id0 . -1) 47) nil (25937 8512 213066 674000) 0 nil])
([nil nil ((46 . 48)) nil (25937 8512 213058 14000) 0 nil])
([nil nil ((47 . 50)) nil (25937 8512 213057 36000) 0 nil])
([nil nil ((51 . 62)) nil (25937 8512 213055 569000) 0 nil])
([nil nil ((62 . 63)) nil (25937 8512 213054 172000) 0 nil])
([nil nil ((64 . 65) 63) nil (25937 8512 213050 261000) 0 nil])
([nil nil ((64 . 65) (#(" " 0 1 (fontified nil)) . -64) (63 . 64) (t 25937 8512 230233 98000)) nil (25937 9170 902637 651000) 0 nil])
([nil nil ((76 . 78) (68 . 77) (65 . 65) (65 . 68)) nil (25937 9170 902636 254000) 0 nil])
([nil nil ((78 . 81)) nil (25937 9170 902634 787000) 0 nil])
([nil nil ((81 . 84)) nil (25937 9170 902633 321000) 0 nil])
([nil nil ((85 . 86)) nil (25937 9170 902631 854000) 0 nil])
([nil nil ((86 . 87)) nil (25937 9170 902630 876000) 0 nil])
([nil nil ((87 . 87) (87 . 90)) nil (25937 9170 902629 479000) 0 nil])
([nil nil ((#("l" 0 1 (fontified t)) . -88) (undo-tree-id552 . -1) (#("i" 0 1 (fontified t)) . -89) (undo-tree-id553 . -1) 90) nil (25937 9170 902628 13000) 0 nil])
([nil nil ((98 . 100) (88 . 99)) nil (25937 9170 902626 57000) 0 nil])
([nil nil ((99 . 102)) nil (25937 9170 902624 591000) 0 nil])
([nil nil ((105 . 106) (103 . 106)) nil (25937 9170 902623 194000) 0 nil])
([nil nil ((#("[" 0 1 (face font-lock-keyword-face fontified t)) . -104) (undo-tree-id549 . -1) (#("L" 0 1 (face font-lock-variable-name-face fontified t)) . -105) (undo-tree-id550 . -1) (#("]" 0 1 (face font-lock-keyword-face fontified t)) . -106) (undo-tree-id551 . -1) 107) nil (25937 9170 902621 797000) 0 nil])
([nil nil ((104 . 109)) nil (25937 9170 902619 422000) 0 nil])
([nil nil ((110 . 114)) nil (25937 9170 902618 444000) 0 nil])
([nil nil ((#("[" 0 1 (face font-lock-keyword-face fontified t)) . -98) (undo-tree-id544 . -1) (#("X" 0 1 (face font-lock-variable-name-face fontified t)) . -99) (undo-tree-id545 . -1) (#("|" 0 1 (face font-lock-keyword-face fontified t)) . -100) (undo-tree-id546 . -1) (#("Y" 0 1 (face font-lock-variable-name-face fontified t)) . -101) (undo-tree-id547 . -1) (#("]" 0 1 (face font-lock-keyword-face fontified t)) . -102) (undo-tree-id548 . -1) 103) nil (25937 9170 902617 48000) 0 nil])
([nil nil ((98 . 100)) nil (25937 9170 902613 835000) 0 nil])
([nil nil ((#("i" 0 1 (fontified t)) . -90) (undo-tree-id481 . -1) (undo-tree-id482 . -1) (undo-tree-id483 . -1) (#("t" 0 1 (fontified t)) . -91) (undo-tree-id484 . -1) (undo-tree-id485 . -1) (undo-tree-id486 . -1) (#("_" 0 1 (fontified t)) . -92) (undo-tree-id487 . -1) (undo-tree-id488 . -1) (undo-tree-id489 . -1) (#("l" 0 1 (fontified t)) . -93) (undo-tree-id490 . -1) (undo-tree-id491 . -1) (undo-tree-id492 . -1) (#("i" 0 1 (fontified t)) . -94) (undo-tree-id493 . -1) (undo-tree-id494 . -1) (undo-tree-id495 . -1) (#("s" 0 1 (fontified t)) . -95) (undo-tree-id496 . -1) (undo-tree-id497 . -1) (undo-tree-id498 . -1) (#("t" 0 1 (fontified t)) . -96) (undo-tree-id499 . -1) (undo-tree-id500 . -1) (undo-tree-id501 . -1) (#("(" 0 1 (fontified t)) . -97) (undo-tree-id502 . -1) (undo-tree-id503 . -1) (undo-tree-id504 . -1) (#("X" 0 1 (face font-lock-variable-name-face fontified t)) . -98) (undo-tree-id505 . -1) (undo-tree-id506 . -1) (undo-tree-id507 . -1) (#("s" 0 1 (face font-lock-variable-name-face fontified t)) . -99) (undo-tree-id508 . -1) (undo-tree-id509 . -1) (undo-tree-id510 . -1) (#("," 0 1 (fontified t)) . -100) (undo-tree-id511 . -1) (undo-tree-id512 . -1) (undo-tree-id513 . -1) (#("L" 0 1 (face font-lock-variable-name-face fontified t)) . -101) (undo-tree-id514 . -1) (undo-tree-id515 . -1) (undo-tree-id516 . -1) (#("s" 0 1 (face font-lock-variable-name-face fontified t)) . -102) (undo-tree-id517 . -1) (undo-tree-id518 . -1) (undo-tree-id519 . -1) (#("," 0 1 (fontified t)) . -103) (undo-tree-id520 . -1) (undo-tree-id521 . -1) (undo-tree-id522 . -1) (#("R" 0 1 (face font-lock-variable-name-face fontified t)) . -104) (undo-tree-id523 . -1) (undo-tree-id524 . -1) (undo-tree-id525 . -1) (#("s" 0 1 (face font-lock-variable-name-face fontified t)) . -105) (undo-tree-id526 . -1) (undo-tree-id527 . -1) (undo-tree-id528 . -1) (#(")" 0 1 (fontified t)) . -106) (undo-tree-id529 . -1) (undo-tree-id530 . -1) (undo-tree-id531 . -1) (#(" " 0 1 (fontified t)) . -107) (undo-tree-id532 . -1) (undo-tree-id533 . -1) (undo-tree-id534 . -1) (#(":" 0 1 (fontified t)) . -108) (undo-tree-id535 . -1) (undo-tree-id536 . -1) (undo-tree-id537 . -1) (#("-" 0 1 (fontified t)) . -109) (undo-tree-id538 . -1) (undo-tree-id539 . -1) (undo-tree-id540 . -1) (#(" " 0 1 (fontified t)) . -110) (undo-tree-id541 . -1) (undo-tree-id542 . -1) (undo-tree-id543 . -1) 111) nil (25937 9170 902611 390000) 0 nil])
([nil nil ((#("t" 0 1 (fontified t)) . -69) (undo-tree-id400 . -1) (undo-tree-id401 . -1) (undo-tree-id402 . -1) (undo-tree-id403 . -1) (#("_" 0 1 (fontified t)) . -70) (undo-tree-id404 . -1) (undo-tree-id405 . -1) (undo-tree-id406 . -1) (undo-tree-id407 . -1) (#("l" 0 1 (fontified t)) . -71) (undo-tree-id408 . -1) (undo-tree-id409 . -1) (undo-tree-id410 . -1) (undo-tree-id411 . -1) (#("i" 0 1 (fontified t)) . -72) (undo-tree-id412 . -1) (undo-tree-id413 . -1) (undo-tree-id414 . -1) (undo-tree-id415 . -1) (#("s" 0 1 (fontified t)) . -73) (undo-tree-id416 . -1) (undo-tree-id417 . -1) (undo-tree-id418 . -1) (undo-tree-id419 . -1) (#("t" 0 1 (fontified t)) . -74) (undo-tree-id420 . -1) (undo-tree-id421 . -1) (undo-tree-id422 . -1) (undo-tree-id423 . -1) (#("(" 0 1 (fontified t)) . -75) (undo-tree-id424 . -1) (undo-tree-id425 . -1) (undo-tree-id426 . -1) (undo-tree-id427 . -1) (#("[" 0 1 (face font-lock-keyword-face fontified t)) . -76) (undo-tree-id428 . -1) (undo-tree-id429 . -1) (undo-tree-id430 . -1) (undo-tree-id431 . -1) (#("]" 0 1 (face font-lock-keyword-face fontified t)) . -77) (undo-tree-id432 . -1) (undo-tree-id433 . -1) (undo-tree-id434 . -1) (undo-tree-id435 . -1) (#("," 0 1 (fontified t)) . -78) (undo-tree-id436 . -1) (undo-tree-id437 . -1) (undo-tree-id438 . -1) (undo-tree-id439 . -1) (#("[" 0 1 (face font-lock-keyword-face fontified t)) . -79) (undo-tree-id440 . -1) (undo-tree-id441 . -1) (undo-tree-id442 . -1) (undo-tree-id443 . -1) (#("]" 0 1 (face font-lock-keyword-face fontified t)) . -80) (undo-tree-id444 . -1) (undo-tree-id445 . -1) (undo-tree-id446 . -1) (undo-tree-id447 . -1) (#("," 0 1 (fontified t)) . -81) (undo-tree-id448 . -1) (undo-tree-id449 . -1) (undo-tree-id450 . -1) (undo-tree-id451 . -1) (#("[" 0 1 (face font-lock-keyword-face fontified t)) . -82) (undo-tree-id452 . -1) (undo-tree-id453 . -1) (undo-tree-id454 . -1) (undo-tree-id455 . -1) (#("]" 0 1 (face font-lock-keyword-face fontified t)) . -83) (undo-tree-id456 . -1) (undo-tree-id457 . -1) (undo-tree-id458 . -1) (undo-tree-id459 . -1) (#(")" 0 1 (fontified t)) . -84) (undo-tree-id460 . -1) (undo-tree-id461 . -1) (undo-tree-id462 . -1) (undo-tree-id463 . -1) (#("." 0 1 (fontified t)) . -85) (undo-tree-id464 . -1) (undo-tree-id465 . -1) (undo-tree-id466 . -1) (undo-tree-id467 . -1) (#("
" 0 1 (fontified t)) . -86) (undo-tree-id468 . -1) (undo-tree-id469 . -1) (undo-tree-id470 . -1) (undo-tree-id471 . -1) (#("s" 0 1 (fontified t)) . -87) (undo-tree-id472 . -1) (undo-tree-id473 . -1) (undo-tree-id474 . -1) (#("p" 0 1 (fontified t)) . -88) (undo-tree-id475 . -1) (undo-tree-id476 . -1) (undo-tree-id477 . -1) (#("l" 0 1 (fontified t)) . -89) (undo-tree-id478 . -1) (undo-tree-id479 . -1) (undo-tree-id480 . -1) 90) nil (25937 9170 902574 724000) 0 nil])
([nil nil ((#("s" 0 1 (fontified t)) . -65) (undo-tree-id384 . -1) (undo-tree-id385 . -1) (undo-tree-id386 . -1) (undo-tree-id387 . -1) (#("p" 0 1 (fontified t)) . -66) (undo-tree-id388 . -1) (undo-tree-id389 . -1) (undo-tree-id390 . -1) (undo-tree-id391 . -1) (#("l" 0 1 (fontified t)) . -67) (undo-tree-id392 . -1) (undo-tree-id393 . -1) (undo-tree-id394 . -1) (undo-tree-id395 . -1) (#("i" 0 1 (fontified t)) . -68) (undo-tree-id396 . -1) (undo-tree-id397 . -1) (undo-tree-id398 . -1) (undo-tree-id399 . -1) 69) nil (25937 9170 902549 441000) 0 nil])
([nil nil ((65 . 68)) nil (25937 9170 902542 876000) 0 nil])
([nil nil ((76 . 79) (68 . 77)) nil (25937 9170 902541 479000) 0 nil])
([nil nil ((80 . 82)) nil (25937 9170 902540 501000) 0 nil])
([nil nil ((#("f" 0 1 (fontified t)) . -65) (undo-tree-id367 . -1) (#("i" 0 1 (fontified t)) . -66) (undo-tree-id368 . -1) (#("r" 0 1 (fontified t)) . -67) (undo-tree-id369 . -1) (#("s" 0 1 (fontified t)) . -68) (undo-tree-id370 . -1) (#("t" 0 1 (fontified t)) . -69) (undo-tree-id371 . -1) (#("_" 0 1 (fontified t)) . -70) (undo-tree-id372 . -1) (#("h" 0 1 (fontified t)) . -71) (undo-tree-id373 . -1) (#("a" 0 1 (fontified t)) . -72) (undo-tree-id374 . -1) (#("l" 0 1 (fontified t)) . -73) (undo-tree-id375 . -1) (#("f" 0 1 (fontified t)) . -74) (undo-tree-id376 . -1) (#("(" 0 1 (fontified t)) . -75) (undo-tree-id377 . -1) (#("L" 0 1 (face font-lock-variable-name-face fontified t)) . -76) (undo-tree-id378 . -1) (#("," 0 1 (fontified t)) . -77) (undo-tree-id379 . -1) (#("N" 0 1 (face font-lock-variable-name-face fontified t)) . -78) (undo-tree-id380 . -1) (#(")" 0 1 (fontified t)) . -79) (undo-tree-id381 . -1) (#(":" 0 1 (fontified t)) . -80) (undo-tree-id382 . -1) (#("-" 0 1 (fontified t)) . -81) (undo-tree-id383 . -1) 82) nil (25937 9170 902538 127000) 0 nil])
([nil nil ((65 . 77)) nil (25937 9170 902530 374000) 0 nil])
([nil nil ((76 . 79)) nil (25937 9170 902528 977000) 0 nil])
([nil nil ((80 . 81)) nil (25937 9170 902527 511000) 0 nil])
([nil nil ((81 . 82)) nil (25937 9170 902526 533000) 0 nil])
([nil nil ((85 . 92) (82 . 82) (82 . 85)) nil (25937 9170 902525 66000) 0 nil])
([nil nil ((94 . 97) (93 . 95) (92 . 94)) nil (25937 9170 902523 600000) 0 nil])
([nil nil ((98 . 100)) nil (25937 9170 902522 203000) 0 nil])
([nil nil ((101 . 105)) nil (25937 9170 902520 806000) 0 nil])
([nil nil ((79 . 80)) nil (25937 9170 902519 339000) 0 nil])
([nil nil ((#("L" 0 1 (face font-lock-variable-name-face fontified t)) . -76) (undo-tree-id366 . -1) 77) nil (25937 9170 902518 431000) 0 nil])
([nil nil ((76 . 77)) nil (25937 9170 902516 546000) 0 nil])
([nil nil ((80 . 82)) nil (25937 9170 902515 149000) 0 nil])
([nil nil ((105 . 108) (103 . 106)) nil (25937 9170 902513 752000) 0 nil])
([nil nil ((113 . 114)) nil (25937 9170 902512 774000) 0 nil])
([nil nil ((125 . 126) (114 . 126)) nil (25937 9170 902511 377000) 0 nil])
([nil nil ((126 . 128)) nil (25937 9170 902509 981000) 0 nil])
([nil nil ((#("N" 0 1 (face font-lock-variable-name-face fontified t)) . -127) (undo-tree-id365 . -1) 128) nil (25937 9170 902508 584000) 0 nil])
([nil nil ((127 . 129)) nil (25937 9170 902506 628000) 0 nil])
([nil nil ((#("Z" 0 1 (face font-lock-variable-name-face fontified t)) . -127) (undo-tree-id364 . -1) 128) nil (25937 9170 902505 231000) 0 nil])
([nil nil ((127 . 128)) nil (25937 9170 902503 765000) 0 nil])
([nil nil ((129 . 130)) nil (25937 9170 902502 298000) 0 nil])
([nil nil ((131 . 136)) nil (25937 9170 902500 831000) 0 nil])
([nil nil ((#("M" 0 1 (face font-lock-variable-name-face fontified t)) . -132) (undo-tree-id360 . -1) (#(" " 0 1 (fontified t)) . -133) (undo-tree-id361 . -1) (#("i" 0 1 (fontified t)) . -134) (undo-tree-id362 . -1) (#("s" 0 1 (fontified t)) . -135) (undo-tree-id363 . -1) 136) nil (25937 9170 902499 365000) 0 nil])
([nil nil ((132 . 142)) nil (25937 9170 902496 501000) 0 nil])
([nil nil ((142 . 145) (141 . 143)) nil (25937 9170 902495 523000) 0 nil])
([nil nil ((146 . 147)) nil (25937 9170 902494 127000) 0 nil])
([nil nil ((147 . 148)) nil (25937 9170 902492 730000) 0 nil])
([nil nil ((149 . 158)) nil (25937 9170 902491 263000) 0 nil])
([nil nil ((#("-" 0 1 (fontified t)) . -157) (undo-tree-id349 . -1) (undo-tree-id350 . -1) (undo-tree-id351 . -1) (undo-tree-id352 . -1) (undo-tree-id353 . -1) (undo-tree-id354 . -1) (undo-tree-id355 . -1) (undo-tree-id356 . -1) (undo-tree-id357 . -1) (undo-tree-id358 . -1) (undo-tree-id359 . -1) 158) nil (25937 9170 902489 796000) 0 nil])
([nil nil ((157 . 159)) nil (25937 9170 902477 85000) 0 nil])
([nil nil ((#("[" 0 1 (face font-lock-keyword-face fontified t)) . -80) (undo-tree-id554 . -1) (undo-tree-id555 . -1) (undo-tree-id556 . -1) (undo-tree-id557 . -1) (undo-tree-id558 . -1) (undo-tree-id559 . -1) (undo-tree-id560 . -1) (undo-tree-id561 . -1) (undo-tree-id562 . -1) (undo-tree-id563 . -1) (undo-tree-id564 . -1) (undo-tree-id565 . -1) (undo-tree-id566 . -1) (undo-tree-id567 . -1) (undo-tree-id568 . -1) (undo-tree-id569 . -1) (undo-tree-id570 . -1) (undo-tree-id571 . -1) (undo-tree-id572 . -1) (undo-tree-id573 . -1) (undo-tree-id574 . -1) (undo-tree-id575 . -1) (undo-tree-id576 . -1) (undo-tree-id577 . -1) (undo-tree-id578 . -1) (undo-tree-id579 . -1) (undo-tree-id580 . -1) (undo-tree-id581 . -1) (undo-tree-id582 . -1) (undo-tree-id583 . -1) (undo-tree-id584 . -1) (undo-tree-id585 . -1) (undo-tree-id586 . -1) (undo-tree-id587 . -1) (undo-tree-id588 . -1) (undo-tree-id589 . -1) (undo-tree-id590 . -1) (undo-tree-id591 . -1) (undo-tree-id592 . -1) (undo-tree-id593 . -1) (undo-tree-id594 . -1) (undo-tree-id595 . -1) (undo-tree-id596 . -1) (undo-tree-id597 . -1) (undo-tree-id598 . -1) (undo-tree-id599 . -1) (undo-tree-id600 . -1) (undo-tree-id601 . -1) (undo-tree-id602 . -1) (undo-tree-id603 . -1) (undo-tree-id604 . -1) (undo-tree-id605 . -1) (#("]" 0 1 (face font-lock-keyword-face fontified t)) . -81) (undo-tree-id606 . -1) (undo-tree-id607 . -1) (undo-tree-id608 . -1) (undo-tree-id609 . -1) (undo-tree-id610 . -1) (undo-tree-id611 . -1) (undo-tree-id612 . -1) (undo-tree-id613 . -1) (undo-tree-id614 . -1) (undo-tree-id615 . -1) (undo-tree-id616 . -1) (undo-tree-id617 . -1) (undo-tree-id618 . -1) (undo-tree-id619 . -1) (undo-tree-id620 . -1) (undo-tree-id621 . -1) (undo-tree-id622 . -1) (undo-tree-id623 . -1) (undo-tree-id624 . -1) (undo-tree-id625 . -1) (undo-tree-id626 . -1) (undo-tree-id627 . -1) (undo-tree-id628 . -1) (undo-tree-id629 . -1) (undo-tree-id630 . -1) (undo-tree-id631 . -1) (undo-tree-id632 . -1) (undo-tree-id633 . -1) (undo-tree-id634 . -1) (undo-tree-id635 . -1) (undo-tree-id636 . -1) (undo-tree-id637 . -1) (undo-tree-id638 . -1) (undo-tree-id639 . -1) (undo-tree-id640 . -1) (undo-tree-id641 . -1) 82 (t 25937 9170 919789 121000)) nil (25937 9284 144714 617000) 0 nil])
([nil nil ((80 . 81)) nil (25937 9284 144635 137000) 0 nil])
([nil nil ((#("K" 0 1 (face font-lock-variable-name-face fontified t)) . -80) (undo-tree-id642 . -1) 81 (t 25937 9284 161782 7000)) nil (25937 9338 807278 350000) 0 nil])
([nil nil ((80 . 82)) nil (25937 9338 807271 366000) 0 nil])
([nil nil ((159 . 160) (#(")" 0 1 (fontified nil)) . -159) (156 . 160)) nil (25937 9338 807269 411000) 0 nil])
([nil nil ((155 . 156)) nil (25937 9338 807265 639000) 0 nil])
([nil nil ((166 . 168) (t 25937 9338 831314 465000)) nil (25937 10383 900384 602000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -166) (undo-tree-id643 . -1) (undo-tree-id644 . -1) (undo-tree-id645 . -1) (#(" " 0 1 (fontified t)) . -167) (undo-tree-id646 . -1) (undo-tree-id647 . -1) (undo-tree-id648 . -1) 168) nil (25937 10383 900380 761000) 0 nil])
([nil nil ((#("Y" 0 1 (face font-lock-variable-name-face fontified t)) . -144) (undo-tree-id322 . -1) (undo-tree-id323 . -1) (undo-tree-id324 . -1) (#("]" 0 1 (face font-lock-keyword-face fontified t)) . -145) (undo-tree-id325 . -1) (undo-tree-id326 . -1) (undo-tree-id327 . -1) (#("," 0 1 (fontified t)) . -146) (undo-tree-id328 . -1) (undo-tree-id329 . -1) (undo-tree-id330 . -1) (#("N" 0 1 (face font-lock-variable-name-face fontified t)) . -147) (undo-tree-id331 . -1) (undo-tree-id332 . -1) (undo-tree-id333 . -1) (#(")" 0 1 (fontified t)) . -148) (undo-tree-id334 . -1) (undo-tree-id335 . -1) (undo-tree-id336 . -1) (#("," 0 1 (fontified t)) . -149) (undo-tree-id337 . -1) (undo-tree-id338 . -1) (undo-tree-id339 . -1) (#("M" 0 1 (face font-lock-variable-name-face fontified t)) . -150) (undo-tree-id340 . -1) (undo-tree-id341 . -1) (undo-tree-id342 . -1) (#(" " 0 1 (fontified t)) . -151) (undo-tree-id343 . -1) (undo-tree-id344 . -1) (undo-tree-id345 . -1) (#("i" 0 1 (fontified t)) . -152) (undo-tree-id346 . -1) (undo-tree-id347 . -1) (undo-tree-id348 . -1) (#("s" 0 1 (fontified t)) . -153) (undo-tree-id349 . -1) (undo-tree-id350 . -1) (undo-tree-id351 . -1) (#(" " 0 1 (fontified t)) . -154) (undo-tree-id352 . -1) (undo-tree-id353 . -1) (undo-tree-id354 . -1) (#("(" 0 1 (fontified t)) . -155) (undo-tree-id355 . -1) (undo-tree-id356 . -1) (undo-tree-id357 . -1) (#("N" 0 1 (face font-lock-variable-name-face fontified t)) . -156) (undo-tree-id358 . -1) (undo-tree-id359 . -1) (undo-tree-id360 . -1) (#("/" 0 1 (fontified t)) . -157) (undo-tree-id361 . -1) (undo-tree-id362 . -1) (undo-tree-id363 . -1) (#("/" 0 1 (fontified t)) . -158) (undo-tree-id364 . -1) (undo-tree-id365 . -1) (undo-tree-id366 . -1) (#("2" 0 1 (fontified t)) . -159) (undo-tree-id367 . -1) (undo-tree-id368 . -1) (undo-tree-id369 . -1) (#(")" 0 1 (fontified t)) . -160) (undo-tree-id370 . -1) (undo-tree-id371 . -1) (undo-tree-id372 . -1) (#("-" 0 1 (fontified t)) . -161) (undo-tree-id373 . -1) (undo-tree-id374 . -1) (undo-tree-id375 . -1) (#("1" 0 1 (fontified t)) . -162) (undo-tree-id376 . -1) (undo-tree-id377 . -1) (undo-tree-id378 . -1) (#("." 0 1 (fontified t)) . -163) (undo-tree-id379 . -1) (undo-tree-id380 . -1) (undo-tree-id381 . -1) (#(" " 0 1 (fontified t)) . -164) (undo-tree-id382 . -1) (undo-tree-id383 . -1) 165 (t 25937 10383 916557 141000)) nil (25937 11655 390199 997000) 0 nil])
([nil nil ((#("t" 0 1 (fontified t)) . -123) (undo-tree-id259 . -1) (undo-tree-id260 . -1) (undo-tree-id261 . -1) (#("(" 0 1 (fontified t)) . -124) (undo-tree-id262 . -1) (undo-tree-id263 . -1) (undo-tree-id264 . -1) (#("Y" 0 1 (face font-lock-variable-name-face fontified t)) . -125) (undo-tree-id265 . -1) (undo-tree-id266 . -1) (undo-tree-id267 . -1) (#("," 0 1 (fontified t)) . -126) (undo-tree-id268 . -1) (undo-tree-id269 . -1) (undo-tree-id270 . -1) (#("M" 0 1 (face font-lock-variable-name-face fontified t)) . -127) (undo-tree-id271 . -1) (undo-tree-id272 . -1) (undo-tree-id273 . -1) (#("," 0 1 (fontified t)) . -128) (undo-tree-id274 . -1) (undo-tree-id275 . -1) (undo-tree-id276 . -1) (#("Z" 0 1 (face font-lock-variable-name-face fontified t)) . -129) (undo-tree-id277 . -1) (undo-tree-id278 . -1) (undo-tree-id279 . -1) (#(")" 0 1 (fontified t)) . -130) (undo-tree-id280 . -1) (undo-tree-id281 . -1) (undo-tree-id282 . -1) (#("," 0 1 (fontified t)) . -131) (undo-tree-id283 . -1) (undo-tree-id284 . -1) (undo-tree-id285 . -1) (#("l" 0 1 (fontified t)) . -132) (undo-tree-id286 . -1) (undo-tree-id287 . -1) (undo-tree-id288 . -1) (#("e" 0 1 (fontified t)) . -133) (undo-tree-id289 . -1) (undo-tree-id290 . -1) (undo-tree-id291 . -1) (#("n" 0 1 (fontified t)) . -134) (undo-tree-id292 . -1) (undo-tree-id293 . -1) (undo-tree-id294 . -1) (#("g" 0 1 (fontified t)) . -135) (undo-tree-id295 . -1) (undo-tree-id296 . -1) (undo-tree-id297 . -1) (#("h" 0 1 (fontified t)) . -136) (undo-tree-id298 . -1) (undo-tree-id299 . -1) (undo-tree-id300 . -1) (#("t" 0 1 (fontified t)) . -137) (undo-tree-id301 . -1) (undo-tree-id302 . -1) (undo-tree-id303 . -1) (#("o" 0 1 (fontified t)) . -138) (undo-tree-id304 . -1) (undo-tree-id305 . -1) (undo-tree-id306 . -1) (#("f" 0 1 (fontified t)) . -139) (undo-tree-id307 . -1) (undo-tree-id308 . -1) (undo-tree-id309 . -1) (#("(" 0 1 (fontified t)) . -140) (undo-tree-id310 . -1) (undo-tree-id311 . -1) (undo-tree-id312 . -1) (#("[" 0 1 (face font-lock-keyword-face fontified t)) . -141) (undo-tree-id313 . -1) (undo-tree-id314 . -1) (undo-tree-id315 . -1) (#("X" 0 1 (face font-lock-variable-name-face fontified t)) . -142) (undo-tree-id316 . -1) (undo-tree-id317 . -1) (undo-tree-id318 . -1) (#("|" 0 1 (face font-lock-keyword-face fontified t)) . -143) (undo-tree-id319 . -1) (undo-tree-id320 . -1) (undo-tree-id321 . -1) 144) nil (25937 11655 390176 42000) 0 nil])
([nil nil ((#("N" 0 1 (face font-lock-variable-name-face fontified t)) . -102) (undo-tree-id196 . -1) (undo-tree-id197 . -1) (undo-tree-id198 . -1) (#("," 0 1 (fontified t)) . -103) (undo-tree-id199 . -1) (undo-tree-id200 . -1) (undo-tree-id201 . -1) (#("[" 0 1 (face font-lock-keyword-face fontified t)) . -104) (undo-tree-id202 . -1) (undo-tree-id203 . -1) (undo-tree-id204 . -1) (#("X" 0 1 (face font-lock-variable-name-face fontified t)) . -105) (undo-tree-id205 . -1) (undo-tree-id206 . -1) (undo-tree-id207 . -1) (#("|" 0 1 (face font-lock-keyword-face fontified t)) . -106) (undo-tree-id208 . -1) (undo-tree-id209 . -1) (undo-tree-id210 . -1) (#("Z" 0 1 (face font-lock-variable-name-face fontified t)) . -107) (undo-tree-id211 . -1) (undo-tree-id212 . -1) (undo-tree-id213 . -1) (#("]" 0 1 (face font-lock-keyword-face fontified t)) . -108) (undo-tree-id214 . -1) (undo-tree-id215 . -1) (undo-tree-id216 . -1) (#(")" 0 1 (fontified t)) . -109) (undo-tree-id217 . -1) (undo-tree-id218 . -1) (undo-tree-id219 . -1) (#(" " 0 1 (fontified t)) . -110) (undo-tree-id220 . -1) (undo-tree-id221 . -1) (undo-tree-id222 . -1) (#(":" 0 1 (fontified t)) . -111) (undo-tree-id223 . -1) (undo-tree-id224 . -1) (undo-tree-id225 . -1) (#("-" 0 1 (fontified t)) . -112) (undo-tree-id226 . -1) (undo-tree-id227 . -1) (undo-tree-id228 . -1) (#(" " 0 1 (fontified t)) . -113) (undo-tree-id229 . -1) (undo-tree-id230 . -1) (undo-tree-id231 . -1) (#("f" 0 1 (fontified t)) . -114) (undo-tree-id232 . -1) (undo-tree-id233 . -1) (undo-tree-id234 . -1) (#("i" 0 1 (fontified t)) . -115) (undo-tree-id235 . -1) (undo-tree-id236 . -1) (undo-tree-id237 . -1) (#("r" 0 1 (fontified t)) . -116) (undo-tree-id238 . -1) (undo-tree-id239 . -1) (undo-tree-id240 . -1) (#("s" 0 1 (fontified t)) . -117) (undo-tree-id241 . -1) (undo-tree-id242 . -1) (undo-tree-id243 . -1) (#("t" 0 1 (fontified t)) . -118) (undo-tree-id244 . -1) (undo-tree-id245 . -1) (undo-tree-id246 . -1) (#("_" 0 1 (fontified t)) . -119) (undo-tree-id247 . -1) (undo-tree-id248 . -1) (undo-tree-id249 . -1) (#("h" 0 1 (fontified t)) . -120) (undo-tree-id250 . -1) (undo-tree-id251 . -1) (undo-tree-id252 . -1) (#("a" 0 1 (fontified t)) . -121) (undo-tree-id253 . -1) (undo-tree-id254 . -1) (undo-tree-id255 . -1) (#("l" 0 1 (fontified t)) . -122) (undo-tree-id256 . -1) (undo-tree-id257 . -1) (undo-tree-id258 . -1) 123) nil (25937 11655 390154 181000) 0 nil])
([nil nil ((#("]" 0 1 (face font-lock-keyword-face fontified t)) . -81) (undo-tree-id130 . -1) (undo-tree-id131 . -1) (undo-tree-id132 . -1) (undo-tree-id133 . -1) (#(")" 0 1 (fontified t)) . -82) (undo-tree-id134 . -1) (undo-tree-id135 . -1) (undo-tree-id136 . -1) (undo-tree-id137 . -1) (#("." 0 1 (fontified t)) . -83) (undo-tree-id138 . -1) (undo-tree-id139 . -1) (undo-tree-id140 . -1) (undo-tree-id141 . -1) (#("
" 0 1 (fontified t)) . -84) (undo-tree-id142 . -1) (undo-tree-id143 . -1) (undo-tree-id144 . -1) (#("f" 0 1 (fontified t)) . -85) (undo-tree-id145 . -1) (undo-tree-id146 . -1) (undo-tree-id147 . -1) (#("i" 0 1 (fontified t)) . -86) (undo-tree-id148 . -1) (undo-tree-id149 . -1) (undo-tree-id150 . -1) (#("r" 0 1 (fontified t)) . -87) (undo-tree-id151 . -1) (undo-tree-id152 . -1) (undo-tree-id153 . -1) (#("s" 0 1 (fontified t)) . -88) (undo-tree-id154 . -1) (undo-tree-id155 . -1) (undo-tree-id156 . -1) (#("t" 0 1 (fontified t)) . -89) (undo-tree-id157 . -1) (undo-tree-id158 . -1) (undo-tree-id159 . -1) (#("_" 0 1 (fontified t)) . -90) (undo-tree-id160 . -1) (undo-tree-id161 . -1) (undo-tree-id162 . -1) (#("h" 0 1 (fontified t)) . -91) (undo-tree-id163 . -1) (undo-tree-id164 . -1) (undo-tree-id165 . -1) (#("a" 0 1 (fontified t)) . -92) (undo-tree-id166 . -1) (undo-tree-id167 . -1) (undo-tree-id168 . -1) (#("l" 0 1 (fontified t)) . -93) (undo-tree-id169 . -1) (undo-tree-id170 . -1) (undo-tree-id171 . -1) (#("t" 0 1 (fontified t)) . -94) (undo-tree-id172 . -1) (undo-tree-id173 . -1) (undo-tree-id174 . -1) (#("(" 0 1 (fontified t)) . -95) (undo-tree-id175 . -1) (undo-tree-id176 . -1) (undo-tree-id177 . -1) (#("[" 0 1 (face font-lock-keyword-face fontified t)) . -96) (undo-tree-id178 . -1) (undo-tree-id179 . -1) (undo-tree-id180 . -1) (#("X" 0 1 (face font-lock-variable-name-face fontified t)) . -97) (undo-tree-id181 . -1) (undo-tree-id182 . -1) (undo-tree-id183 . -1) (#("|" 0 1 (face font-lock-keyword-face fontified t)) . -98) (undo-tree-id184 . -1) (undo-tree-id185 . -1) (undo-tree-id186 . -1) (#("Y" 0 1 (face font-lock-variable-name-face fontified t)) . -99) (undo-tree-id187 . -1) (undo-tree-id188 . -1) (undo-tree-id189 . -1) (#("]" 0 1 (face font-lock-keyword-face fontified t)) . -100) (undo-tree-id190 . -1) (undo-tree-id191 . -1) (undo-tree-id192 . -1) (#("," 0 1 (fontified t)) . -101) (undo-tree-id193 . -1) (undo-tree-id194 . -1) (undo-tree-id195 . -1) 102) nil (25937 11655 390123 451000) 0 nil])
([nil nil ((#("f" 0 1 (fontified t)) . -65) (undo-tree-id66 . -1) (undo-tree-id67 . -1) (undo-tree-id68 . -1) (undo-tree-id69 . -1) (#("i" 0 1 (fontified t)) . -66) (undo-tree-id70 . -1) (undo-tree-id71 . -1) (undo-tree-id72 . -1) (undo-tree-id73 . -1) (#("r" 0 1 (fontified t)) . -67) (undo-tree-id74 . -1) (undo-tree-id75 . -1) (undo-tree-id76 . -1) (undo-tree-id77 . -1) (#("s" 0 1 (fontified t)) . -68) (undo-tree-id78 . -1) (undo-tree-id79 . -1) (undo-tree-id80 . -1) (undo-tree-id81 . -1) (#("t" 0 1 (fontified t)) . -69) (undo-tree-id82 . -1) (undo-tree-id83 . -1) (undo-tree-id84 . -1) (undo-tree-id85 . -1) (#("_" 0 1 (fontified t)) . -70) (undo-tree-id86 . -1) (undo-tree-id87 . -1) (undo-tree-id88 . -1) (undo-tree-id89 . -1) (#("h" 0 1 (fontified t)) . -71) (undo-tree-id90 . -1) (undo-tree-id91 . -1) (undo-tree-id92 . -1) (undo-tree-id93 . -1) (#("a" 0 1 (fontified t)) . -72) (undo-tree-id94 . -1) (undo-tree-id95 . -1) (undo-tree-id96 . -1) (undo-tree-id97 . -1) (#("l" 0 1 (fontified t)) . -73) (undo-tree-id98 . -1) (undo-tree-id99 . -1) (undo-tree-id100 . -1) (undo-tree-id101 . -1) (#("t" 0 1 (fontified t)) . -74) (undo-tree-id102 . -1) (undo-tree-id103 . -1) (undo-tree-id104 . -1) (undo-tree-id105 . -1) (#("(" 0 1 (fontified t)) . -75) (undo-tree-id106 . -1) (undo-tree-id107 . -1) (undo-tree-id108 . -1) (undo-tree-id109 . -1) (#("_" 0 1 (face font-lock-variable-name-face fontified t)) . -76) (undo-tree-id110 . -1) (undo-tree-id111 . -1) (undo-tree-id112 . -1) (undo-tree-id113 . -1) (#("," 0 1 (fontified t)) . -77) (undo-tree-id114 . -1) (undo-tree-id115 . -1) (undo-tree-id116 . -1) (undo-tree-id117 . -1) (#("0" 0 1 (fontified t)) . -78) (undo-tree-id118 . -1) (undo-tree-id119 . -1) (undo-tree-id120 . -1) (undo-tree-id121 . -1) (#("," 0 1 (fontified t)) . -79) (undo-tree-id122 . -1) (undo-tree-id123 . -1) (undo-tree-id124 . -1) (undo-tree-id125 . -1) (#("[" 0 1 (face font-lock-keyword-face fontified t)) . -80) (undo-tree-id126 . -1) (undo-tree-id127 . -1) (undo-tree-id128 . -1) (undo-tree-id129 . -1) 81) nil (25937 11655 390098 518000) 0 nil])
([nil nil ((76 . 83) (68 . 77) (65 . 65) (65 . 68)) nil (25937 11655 390072 677000) 0 nil])
([nil nil ((83 . 84)) nil (25937 11655 390071 280000) 0 nil])
([nil nil ((85 . 87)) nil (25937 11655 390069 814000) 0 nil])
([nil nil ((87 . 92)) nil (25937 11655 390068 417000) 0 nil])
([nil nil ((apply yas--take-care-of-redo #s(yas--snippet nil (#s(yas--field 1 101 105 nil nil nil t #s(yas--field 2 107 110 nil nil nil t #s(yas--exit 111 nil))) #s(yas--field 2 107 110 nil nil nil t #s(yas--exit 111 nil))) #s(yas--exit 111 nil) 0 nil #s(yas--field 2 107 110 nil nil nil t #s(yas--exit 111 nil)) nil nil)) (92 . 106) (#("lenghtof/2" 0 10 (fontified nil)) . -92) (undo-tree-id63 . -3) (undo-tree-id64 . -3) (undo-tree-id65 . -3) (95 . 102) (92 . 92) (92 . 95)) nil (25937 11655 390067 20000) 0 nil])
([nil nil ((102 . 105) (#("_" 0 1 (face font-lock-variable-name-face fontified nil)) . 102) (101 . 102)) nil (25937 11655 390063 319000) 0 nil])
([nil nil ((108 . 108) (108 . 110) (#("_" 0 1 (face font-lock-variable-name-face fontified nil)) . 108) (107 . 108)) nil (25937 11655 390061 852000) 0 nil])
([nil nil ((apply yas--snippet-revive 92 111 #s(yas--snippet nil (#s(yas--field 1 101 105 nil nil nil t #s(yas--field 2 107 110 nil nil nil t #s(yas--exit 111 nil))) #s(yas--field 2 107 110 nil nil nil t #s(yas--exit 111 nil))) #s(yas--exit 111 nil) 0 nil #s(yas--field 2 107 110 nil nil nil t #s(yas--exit 111 nil)) nil nil))) nil (25937 11655 390060 455000) 0 nil])
([nil nil ((111 . 112)) nil (25937 11655 390059 58000) 0 nil])
([nil nil ((112 . 117)) nil (25937 11655 390057 592000) 0 nil])
([nil nil ((120 . 122) (117 . 117) (117 . 120)) nil (25937 11655 390056 614000) 0 nil])
([nil nil ((#("L" 0 1 (face font-lock-variable-name-face fontified t)) . -121) (undo-tree-id62 . -1) 122) nil (25937 11655 390055 147000) 0 nil])
([nil nil ((121 . 125)) nil (25937 11655 390053 192000) 0 nil])
([nil nil ((125 . 137)) nil (25937 11655 390051 725000) 0 nil])
([nil nil ((137 . 142)) nil (25937 11655 390050 328000) 0 nil])
([nil nil ((142 . 144)) nil (25937 11655 390048 862000) 0 nil])
([nil nil ((apply yas--take-care-of-redo #s(yas--snippet nil (#s(yas--field 1 151 152 nil nil nil t #s(yas--field 2 154 161 nil nil nil t #s(yas--exit 162 nil))) #s(yas--field 2 154 161 nil nil nil t #s(yas--exit 162 nil))) #s(yas--exit 162 nil) 1 nil #s(yas--field 2 154 161 nil nil nil t #s(yas--exit 162 nil)) nil nil)) (142 . 156) (#("lenghtof/2" 0 10 (fontified nil)) . -142) (undo-tree-id61 . -2) (144 . 152)) nil (25937 11655 390047 954000) 0 nil])
([nil nil ((#("_" 0 1 (face font-lock-variable-name-face fontified nil)) . 152) (151 . 152)) nil (25937 11655 390045 998000) 0 nil])
([nil nil ((155 . 155) (155 . 157) (#("_" 0 1 (face font-lock-variable-name-face fontified nil)) . 155) (154 . 155)) nil (25937 11655 390044 112000) 0 nil])
([nil nil ((157 . 161)) nil (25937 11655 390042 716000) 0 nil])
([nil nil ((apply yas--snippet-revive 142 162 #s(yas--snippet nil (#s(yas--field 1 151 152 nil nil nil t #s(yas--field 2 154 161 nil nil nil t #s(yas--exit 162 nil))) #s(yas--field 2 154 161 nil nil nil t #s(yas--exit 162 nil))) #s(yas--exit 162 nil) 1 nil #s(yas--field 2 154 161 nil nil nil t #s(yas--exit 162 nil)) nil nil))) nil (25937 11655 390041 319000) 0 nil])
([nil nil ((#("l" 0 1 (face font-lock-variable-name-face fontified t)) . -118) (undo-tree-id57 . -1) (undo-tree-id58 . -1) (#("a" 0 1 (face font-lock-variable-name-face fontified t)) . -119) (undo-tree-id59 . -1) (undo-tree-id60 . -1) 120) nil (25937 11655 390039 852000) 0 nil])
([nil nil ((118 . 120)) nil (25937 11655 390036 989000) 0 nil])
([nil nil ((162 . 163)) nil (25937 11655 390035 522000) 0 nil])
([nil nil ((166 . 169) (163 . 163) (163 . 166)) nil (25937 11655 390034 125000) 0 nil])
([nil nil ((#("a" 0 1 (fontified t)) . -163) (undo-tree-id46 . -1) (undo-tree-id47 . -1) (#("p" 0 1 (fontified t)) . -164) (undo-tree-id48 . -1) (undo-tree-id49 . -1) (#("p" 0 1 (fontified t)) . -165) (undo-tree-id50 . -1) (undo-tree-id51 . -1) (#("e" 0 1 (fontified t)) . -166) (undo-tree-id52 . -1) (undo-tree-id53 . -1) (#("n" 0 1 (fontified t)) . -167) (undo-tree-id54 . -1) (undo-tree-id55 . -1) (#("d" 0 1 (fontified t)) . -168) (undo-tree-id56 . -1) 169) nil (25937 11655 390032 728000) 0 nil])
([nil nil ((163 . 168)) nil (25937 11655 390027 71000) 0 nil])
([nil nil ((175 . 176) (174 . 176) (168 . 168) (168 . 174)) nil (25937 11655 390025 605000) 0 nil])
([nil nil ((176 . 178)) nil (25937 11655 390023 649000) 0 nil])
([nil nil ((#("D" 0 1 (face font-lock-variable-name-face fontified t)) . -177) (undo-tree-id35 . -1) (undo-tree-id36 . -1) (undo-tree-id37 . -1) (undo-tree-id38 . -1) (undo-tree-id39 . -1) (undo-tree-id40 . -1) (undo-tree-id41 . -1) (undo-tree-id42 . -1) (undo-tree-id43 . -1) (undo-tree-id44 . -1) (undo-tree-id45 . -1) 178) nil (25937 11655 390022 182000) 0 nil])
([nil nil ((177 . 181)) nil (25937 11655 390017 363000) 0 nil])
([nil nil ((#("I" 0 1 (face font-lock-variable-name-face fontified t)) . -180) (undo-tree-id0 . -1) (undo-tree-id1 . -1) (undo-tree-id2 . -1) (undo-tree-id3 . -1) (undo-tree-id4 . -1) (undo-tree-id5 . -1) (undo-tree-id6 . -1) (undo-tree-id7 . -1) (undo-tree-id8 . -1) (undo-tree-id9 . -1) (undo-tree-id10 . -1) (undo-tree-id11 . -1) (undo-tree-id12 . -1) (undo-tree-id13 . -1) (undo-tree-id14 . -1) (undo-tree-id15 . -1) (undo-tree-id16 . -1) (undo-tree-id17 . -1) (undo-tree-id18 . -1) (undo-tree-id19 . -1) (undo-tree-id20 . -1) (undo-tree-id21 . -1) (undo-tree-id22 . -1) (undo-tree-id23 . -1) (undo-tree-id24 . -1) (undo-tree-id25 . -1) (undo-tree-id26 . -1) (undo-tree-id27 . -1) (undo-tree-id28 . -1) (undo-tree-id29 . -1) (undo-tree-id30 . -1) (undo-tree-id31 . -1) (undo-tree-id32 . -1) (undo-tree-id33 . -1) (undo-tree-id34 . -1) 181) nil (25937 11655 390015 478000) 0 nil])
([nil nil ((180 . 180) (180 . 183)) nil (25937 11655 389980 697000) 0 nil])
([nil nil ((184 . 185)) nil (25937 11655 389979 230000) 0 nil])
([nil nil ((185 . 187)) nil (25937 11655 389975 529000) 0 nil])
([nil nil ((191 . 201) (188 . 188) (188 . 191) (t 25937 11655 413607 897000)) nil (25937 12210 714831 895000) 0 nil])
([nil nil ((200 . 213)) nil (25937 12210 714830 429000) 0 nil])
([nil nil ((214 . 215)) nil (25937 12210 714828 962000) 0 nil])
([nil nil ((215 . 217)) nil (25937 12210 714827 565000) 0 nil])
([nil nil ((#("L" 0 1 (face font-lock-variable-name-face fontified t)) . -200) (undo-tree-id407 . -1) (undo-tree-id408 . -1) 201) nil (25937 12210 714826 168000) 0 nil])
([nil nil ((201 . 205) (200 . 202)) nil (25937 12210 714824 213000) 0 nil])
([nil nil ((#("R" 0 1 (face font-lock-variable-name-face fontified t)) . -207) (undo-tree-id405 . -1) (undo-tree-id406 . -1) 208) nil (25937 12210 714822 397000) 0 nil])
([nil nil ((208 . 210) (207 . 209)) nil (25937 12210 714820 511000) 0 nil])
([nil nil ((210 . 212)) nil (25937 12210 714819 114000) 0 nil])
([nil nil ((188 . 190)) nil (25937 12210 714817 648000) 0 nil])
([nil nil ((192 . 202) (189 . 189) (189 . 192)) nil (25937 12210 714816 181000) 0 nil])
([nil nil ((201 . 203)) nil (25937 12210 714814 295000) 0 nil])
([nil nil ((#("[" 0 1 (face font-lock-keyword-face fontified t)) . -201) (undo-tree-id401 . -1) (undo-tree-id402 . -1) (#("]" 0 1 (face font-lock-keyword-face fontified t)) . -202) (undo-tree-id403 . -1) (undo-tree-id404 . -1) 203) nil (25937 12210 714812 899000) 0 nil])
([nil nil ((201 . 207)) nil (25937 12210 714810 524000) 0 nil])
([nil nil ((208 . 209)) nil (25937 12210 714809 127000) 0 nil])
([nil nil ((249 . 253)) nil (25937 12210 714807 660000) 0 nil])
([nil nil ((#(">" 0 1 (fontified t)) . -252) (undo-tree-id400 . -1) 253) nil (25937 12210 714806 194000) 0 nil])
([nil nil ((252 . 253)) nil (25937 12210 714804 727000) 0 nil])
([nil nil ((#("<" 0 1 (fontified t)) . -252) (undo-tree-id399 . -1) 253) nil (25937 12210 714802 841000) 0 nil])
([nil nil ((252 . 258)) nil (25937 12210 714801 375000) 0 nil])
([nil nil ((236 . 239)) nil (25937 12210 714799 908000) 0 nil])
([nil nil ((236 . 238)) nil (25937 12210 714798 441000) 0 nil])
([nil nil ((#("]" 0 1 (face font-lock-keyword-face fontified t)) . -237) (undo-tree-id397 . -1) (undo-tree-id398 . -1) 238) nil (25937 12210 714797 45000) 0 nil])
([nil nil ((248 . 249) (#("]" 0 1 (face font-lock-variable-name-face fontified nil)) . -248) (248 . 249)) nil (25937 12210 714795 159000) 0 nil])
([nil nil ((#("]" 0 1 (face font-lock-keyword-face fontified t)) . -248) (undo-tree-id396 . -1) 249) nil (25937 12210 714793 692000) 0 nil])
([nil nil ((249 . 250) (#("]" 0 1 (face font-lock-variable-name-face fontified nil)) . -249) (249 . 250)) nil (25937 12210 714791 806000) 0 nil])
([nil nil ((263 . 264)) nil (25937 12210 714789 921000) 0 nil])
([nil nil ((277 . 280) (276 . 278) (267 . 277) (264 . 264) (264 . 267)) nil (25937 12210 714789 13000) 0 nil])
([nil nil ((280 . 281)) nil (25937 12210 714787 127000) 0 nil])
([nil nil ((284 . 288) (282 . 285)) nil (25937 12210 714785 660000) 0 nil])
([nil nil ((291 . 303) (289 . 292)) nil (25937 12210 714784 264000) 0 nil])
([nil nil ((305 . 317)) nil (25937 12210 714782 797000) 0 nil])
([nil nil ((#("1" 0 1 (face font-lock-variable-name-face fontified t)) . -316) (undo-tree-id395 . -1) 317) nil (25937 12210 714781 400000) 0 nil])
([nil nil ((316 . 317)) nil (25937 12210 714780 3000) 0 nil])
([nil nil ((#("=" 0 1 (fontified t)) . -312) (undo-tree-id394 . -1) 313) nil (25937 12210 714778 606000) 0 nil])
([nil nil ((316 . 317)) nil (25937 12210 714776 651000) 0 nil])
([nil nil ((#("." 0 1 (fontified t)) . -208) (undo-tree-id391 . -1) (undo-tree-id392 . -1) (undo-tree-id393 . -1) 209) nil (25937 12210 714774 695000) 0 nil])
([nil nil ((208 . 211)) nil (25937 12210 714772 321000) 0 nil])
([nil nil ((#("_" 0 1 (face font-lock-variable-name-face fontified t)) . -201) (undo-tree-id390 . -1) 202) nil (25937 12210 714770 854000) 0 nil])
([nil nil ((202 . 203) (201 . 203)) nil (25937 12210 714768 410000) 0 nil])
([nil nil ((208 . 209)) nil (25937 12210 714767 13000) 0 nil])
([nil nil ((#("_" 0 1 (face font-lock-variable-name-face fontified t)) . -205) (undo-tree-id389 . -1) 206) nil (25937 12210 714765 546000) 0 nil])
([nil nil ((205 . 207)) nil (25937 12210 714763 660000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -212) (undo-tree-id384 . -1) (undo-tree-id385 . -1) (#(":" 0 1 (fontified t)) . -213) (undo-tree-id386 . -1) (undo-tree-id387 . -1) (#("-" 0 1 (fontified t)) . -214) (undo-tree-id388 . -1) 215) nil (25937 12210 714762 264000) 0 nil])
([nil nil ((212 . 213)) nil (25937 12210 714753 254000) 0 nil])
([nil nil ((213 . 214)) nil (25937 12210 714751 857000) 0 nil])
([nil nil ((226 . 228) (217 . 227) (214 . 214) (214 . 217)) nil (25937 12210 714750 460000) 0 nil])
([nil nil ((230 . 231) (228 . 231)) nil (25937 12210 714748 994000) 0 nil])
([nil nil ((234 . 235) (232 . 235)) nil (25937 12210 714747 597000) 0 nil])
([nil nil ((237 . 238)) nil (25937 12210 714745 641000) 0 nil])
([nil nil ((346 . 347) 238) nil (25937 12210 714741 800000) 0 nil])
([nil nil ((#("." 0 1 (fontified t)) . -291) (undo-tree-id438 . -1) (undo-tree-id439 . -1) (undo-tree-id440 . -1) 292 (t 25937 12210 738488 640000)) nil (25937 12357 123823 308000) 0 nil])
([nil nil ((apply yas--take-care-of-redo #s(yas--snippet nil (#s(yas--field 1 305 306 nil nil nil t #s(yas--field 2 308 314 nil nil nil t #s(yas--field 3 316 325 nil nil nil t #s(yas--exit 326 nil)))) #s(yas--field 2 308 314 nil nil nil t #s(yas--field 3 316 325 nil nil nil t #s(yas--exit 326 nil))) #s(yas--field 3 316 325 nil nil nil t #s(yas--exit 326 nil))) #s(yas--exit 326 nil) 2 nil #s(yas--field 3 316 325 nil nil nil t #s(yas--exit 326 nil)) nil nil)) (293 . 313) (#("sorting_two/3" 0 13 (fontified nil)) . -293) (undo-tree-id436 . -7) (undo-tree-id437 . -7) (300 . 306) (296 . 300) (291 . 291) (291 . 296)) nil (25937 12357 123820 934000) 0 nil])
([nil nil ((#("_" 0 1 (face font-lock-variable-name-face fontified nil)) . 306) (305 . 306)) nil (25937 12357 123818 629000) 0 nil])
([nil nil ((309 . 313) (309 . 310) (#("_" 0 1 (face font-lock-variable-name-face fontified nil)) . 309) (308 . 309)) nil (25937 12357 123817 232000) 0 nil])
([nil nil ((319 . 325) (317 . 317) (317 . 319) (#("_" 0 1 (face font-lock-variable-name-face fontified nil)) . 317) (316 . 317)) nil (25937 12357 123815 346000) 0 nil])
([nil nil ((apply yas--snippet-revive 293 326 #s(yas--snippet nil (#s(yas--field 1 305 306 nil nil nil t #s(yas--field 2 308 314 nil nil nil t #s(yas--field 3 316 325 nil nil nil t #s(yas--exit 326 nil)))) #s(yas--field 2 308 314 nil nil nil t #s(yas--field 3 316 325 nil nil nil t #s(yas--exit 326 nil))) #s(yas--field 3 316 325 nil nil nil t #s(yas--exit 326 nil))) #s(yas--exit 326 nil) 2 nil #s(yas--field 3 316 325 nil nil nil t #s(yas--exit 326 nil)) nil nil))) nil (25937 12357 123813 880000) 0 nil])
([nil nil ((326 . 327)) nil (25937 12357 123812 413000) 0 nil])
([nil nil ((327 . 328)) nil (25937 12357 123811 16000) 0 nil])
([nil nil ((#("." 0 1 (fontified t)) . -381) (undo-tree-id435 . -1) 382) nil (25937 12357 123809 619000) 0 nil])
([nil nil ((apply yas--take-care-of-redo #s(yas--snippet nil (#s(yas--field 1 394 400 nil nil nil t #s(yas--field 2 402 403 nil nil nil t #s(yas--field 3 405 406 nil nil nil nil #s(yas--exit 407 nil)))) #s(yas--field 2 402 403 nil nil nil t #s(yas--field 3 405 406 nil nil nil nil #s(yas--exit 407 nil))) #s(yas--field 3 405 406 nil nil nil nil #s(yas--exit 407 nil))) #s(yas--exit 407 nil) 3 nil #s(yas--field 2 402 403 nil nil nil t #s(yas--field 3 405 406 nil nil nil nil #s(yas--exit 407 nil))) nil nil)) (382 . 402) (#("sorting_two/3" 0 13 (fontified nil)) . -382) (undo-tree-id433 . -7) (undo-tree-id434 . -7) (389 . 395) (385 . 389) (381 . 381) (381 . 385)) nil (25937 12357 123807 734000) 0 nil])
([nil nil ((395 . 396) (395 . 396) (#("_" 0 1 (face font-lock-variable-name-face fontified nil)) . 395) (394 . 395)) nil (25937 12357 123805 359000) 0 nil])
([nil nil ((396 . 399)) nil (25937 12357 123803 892000) 0 nil])
([nil nil ((#("_" 0 1 (face font-lock-variable-name-face fontified nil)) . 403) (402 . 403)) nil (25937 12357 123802 426000) 0 nil])
([nil nil ((apply yas--snippet-revive 382 407 #s(yas--snippet nil (#s(yas--field 1 394 400 nil nil nil t #s(yas--field 2 402 403 nil nil nil t #s(yas--field 3 405 406 nil nil nil nil #s(yas--exit 407 nil)))) #s(yas--field 2 402 403 nil nil nil t #s(yas--field 3 405 406 nil nil nil nil #s(yas--exit 407 nil))) #s(yas--field 3 405 406 nil nil nil nil #s(yas--exit 407 nil))) #s(yas--exit 407 nil) 3 nil #s(yas--field 2 402 403 nil nil nil t #s(yas--field 3 405 406 nil nil nil nil #s(yas--exit 407 nil))) nil nil))) nil (25937 12357 123800 959000) 0 nil])
([nil nil ((#("," 0 1 (fontified t)) . -351) (undo-tree-id432 . -1) 352) nil (25937 12357 123799 562000) 0 nil])
([nil nil ((351 . 352)) nil (25937 12357 123797 607000) 0 nil])
([nil nil ((#("R" 0 1 (face font-lock-variable-name-face fontified nil)) . 412) (402 . 412)) nil (25937 12357 123796 140000) 0 nil])
([nil nil ((#("l" 0 1 (fontified t)) . -402) (undo-tree-id412 . -1) (undo-tree-id413 . -1) (#("e" 0 1 (fontified t)) . -403) (undo-tree-id414 . -1) (undo-tree-id415 . -1) (#("n" 0 1 (fontified t)) . -404) (undo-tree-id416 . -1) (undo-tree-id417 . -1) (#("g" 0 1 (fontified t)) . -405) (undo-tree-id418 . -1) (undo-tree-id419 . -1) (#("h" 0 1 (fontified t)) . -406) (undo-tree-id420 . -1) (undo-tree-id421 . -1) (#("t" 0 1 (fontified t)) . -407) (undo-tree-id422 . -1) (undo-tree-id423 . -1) (#("o" 0 1 (fontified t)) . -408) (undo-tree-id424 . -1) (undo-tree-id425 . -1) (#("f" 0 1 (fontified t)) . -409) (undo-tree-id426 . -1) (undo-tree-id427 . -1) (#("/" 0 1 (fontified t)) . -410) (undo-tree-id428 . -1) (undo-tree-id429 . -1) (#("2" 0 1 (face (font-lock-function-name-face) fontified t)) . -411) (undo-tree-id430 . -1) (undo-tree-id431 . -1) 412) nil (25937 12357 123794 254000) 0 nil])
([nil nil ((401 . 402)) nil (25937 12357 123786 223000) 0 nil])
([nil nil ((#("_" 0 1 (face font-lock-variable-name-face fontified t)) . -405) (undo-tree-id409 . -1) (undo-tree-id410 . -1) (undo-tree-id411 . -1) 406) nil (25937 12357 123784 337000) 0 nil])
([nil nil ((409 . 414) (405 . 405) (405 . 409)) nil (25937 12357 123776 724000) 0 nil])
([nil nil ((415 . 416)) nil (25937 12357 123773 372000) 0 nil])
([nil nil ((#("[" 0 1 (face font-lock-keyword-face fontified t)) . -229) (undo-tree-id485 . -1) (undo-tree-id486 . -1) (undo-tree-id487 . -1) (#("X" 0 1 (face font-lock-variable-name-face fontified t)) . -230) (undo-tree-id488 . -1) (undo-tree-id489 . -1) (undo-tree-id490 . -1) (#("]" 0 1 (face font-lock-keyword-face fontified t)) . -231) (undo-tree-id491 . -1) (undo-tree-id492 . -1) (undo-tree-id493 . -1) 232 (t 25937 12357 141506 271000)) nil (25937 12712 515370 788000) 0 nil])
([nil nil ((229 . 229) (229 . 233)) nil (25937 12712 515366 528000) 0 nil])
([nil nil ((#("[" 0 1 (face font-lock-keyword-face fontified t)) . -234) (undo-tree-id480 . -1) (undo-tree-id481 . -1) (#("X" 0 1 (face font-lock-variable-name-face fontified t)) . -235) (undo-tree-id482 . -1) (undo-tree-id483 . -1) (#("]" 0 1 (face font-lock-keyword-face fontified t)) . -236) (undo-tree-id484 . -1) 237) nil (25937 12712 515364 642000) 0 nil])
([nil nil ((234 . 234) (234 . 238)) nil (25937 12712 515361 779000) 0 nil])
([nil nil ((#("[" 0 1 (face font-lock-keyword-face fontified t)) . -201) (undo-tree-id471 . -1) (undo-tree-id472 . -1) (undo-tree-id473 . -1) (#("X" 0 1 (face font-lock-variable-name-face fontified t)) . -202) (undo-tree-id474 . -1) (undo-tree-id475 . -1) (undo-tree-id476 . -1) (#("]" 0 1 (face font-lock-keyword-face fontified t)) . -203) (undo-tree-id477 . -1) (undo-tree-id478 . -1) (undo-tree-id479 . -1) 204) nil (25937 12712 515359 893000) 0 nil])
([nil nil ((201 . 205)) nil (25937 12712 515355 144000) 0 nil])
([nil nil ((#("[" 0 1 (face font-lock-keyword-face fontified t)) . -209) (undo-tree-id466 . -1) (undo-tree-id467 . -1) (#("X" 0 1 (face font-lock-variable-name-face fontified t)) . -210) (undo-tree-id468 . -1) (undo-tree-id469 . -1) (#("]" 0 1 (face font-lock-keyword-face fontified t)) . -211) (undo-tree-id470 . -1) 212) nil (25937 12712 515353 747000) 0 nil])
([nil nil ((209 . 213)) nil (25937 12712 515350 814000) 0 nil])
([nil nil ((420 . 422)) nil (25937 12712 515349 347000) 0 nil])
([nil nil ((433 . 435) (426 . 434) (422 . 422) (422 . 426)) nil (25937 12712 515347 950000) 0 nil])
([nil nil ((435 . 438)) nil (25937 12712 515346 484000) 0 nil])
([nil nil ((439 . 440)) nil (25937 12712 515345 17000) 0 nil])
([nil nil ((440 . 441)) nil (25937 12712 515343 620000) 0 nil])
([nil nil ((452 . 454) (444 . 453) (441 . 441) (441 . 444)) nil (25937 12712 515342 153000) 0 nil])
([nil nil ((453 . 454)) nil (25937 12712 515340 268000) 0 nil])
([nil nil ((457 . 458) (455 . 458)) nil (25937 12712 515339 290000) 0 nil])
([nil nil ((460 . 461)) nil (25937 12712 515337 893000) 0 nil])
([nil nil ((461 . 462)) nil (25937 12712 515336 496000) 0 nil])
([nil nil ((465 . 474) (462 . 462) (462 . 465)) nil (25937 12712 515335 99000) 0 nil])
([nil nil ((473 . 481)) nil (25937 12712 515333 633000) 0 nil])
([nil nil ((482 . 484)) nil (25937 12712 515332 236000) 0 nil])
([nil nil ((484 . 489)) nil (25937 12712 515330 839000) 0 nil])
([nil nil ((489 . 490)) nil (25937 12712 515329 372000) 0 nil])
([nil nil ((#("l" 0 1 (fontified t)) . -489) (undo-tree-id465 . -1) 490) nil (25937 12712 515327 976000) 0 nil])
([nil nil ((489 . 490)) nil (25937 12712 515326 579000) 0 nil])
([nil nil ((apply yas--take-care-of-redo #s(yas--snippet nil (#s(yas--field 1 498 502 nil nil nil t #s(yas--field 2 504 505 nil nil nil t #s(yas--exit 506 nil))) #s(yas--field 2 504 505 nil nil nil t #s(yas--exit 506 nil))) #s(yas--exit 506 nil) 4 nil #s(yas--field 2 504 505 nil nil nil t #s(yas--exit 506 nil)) nil nil)) (489 . 503) (#("lenghtof/2" 0 10 (fontified nil)) . -489) (undo-tree-id463 . -4) (undo-tree-id464 . -4) (493 . 499) (492 . 493) (490 . 490) (490 . 492)) nil (25937 12712 515324 623000) 0 nil])
([nil nil ((501 . 502) (499 . 499) (499 . 501) (#("_" 0 1 (face font-lock-variable-name-face fontified nil)) . 499) (498 . 499)) nil (25937 12712 515322 249000) 0 nil])
([nil nil ((#("_" 0 1 (face font-lock-variable-name-face fontified nil)) . 505) (504 . 505)) nil (25937 12712 515320 293000) 0 nil])
([nil nil ((apply yas--snippet-revive 489 506 #s(yas--snippet nil (#s(yas--field 1 498 502 nil nil nil t #s(yas--field 2 504 505 nil nil nil t #s(yas--exit 506 nil))) #s(yas--field 2 504 505 nil nil nil t #s(yas--exit 506 nil))) #s(yas--exit 506 nil) 4 nil #s(yas--field 2 504 505 nil nil nil t #s(yas--exit 506 nil)) nil nil))) nil (25937 12712 515318 896000) 0 nil])
([nil nil ((506 . 507)) nil (25937 12712 515317 918000) 0 nil])
([nil nil ((507 . 512)) nil (25937 12712 515316 452000) 0 nil])
([nil nil ((512 . 518)) nil (25937 12712 515314 985000) 0 nil])
([nil nil ((518 . 523)) nil (25937 12712 515313 588000) 0 nil])
([nil nil ((523 . 524)) nil (25937 12712 515312 611000) 0 nil])
([nil nil ((apply yas--take-care-of-redo #s(yas--snippet nil (#s(yas--field 1 534 538 nil nil nil t #s(yas--field 2 540 544 nil nil nil t #s(yas--field 3 546 551 nil nil nil t #s(yas--exit 552 nil)))) #s(yas--field 2 540 544 nil nil nil t #s(yas--field 3 546 551 nil nil nil t #s(yas--exit 552 nil))) #s(yas--field 3 546 551 nil nil nil t #s(yas--exit 552 nil))) #s(yas--exit 552 nil) 5 nil #s(yas--field 3 546 551 nil nil nil t #s(yas--exit 552 nil)) nil nil)) (523 . 542) (#("split_list/3" 0 12 (fontified nil)) . -523) (undo-tree-id461 . -4) (undo-tree-id462 . -4) (527 . 535) (526 . 527) (524 . 524) (524 . 526)) nil (25937 12712 515311 144000) 0 nil])
([nil nil ((537 . 538) (535 . 535) (535 . 537) (#("_" 0 1 (face font-lock-variable-name-face fontified nil)) . 535) (534 . 535)) nil (25937 12712 515308 350000) 0 nil])
([nil nil ((541 . 544) (#("_" 0 1 (face font-lock-variable-name-face fontified nil)) . 541) (540 . 541)) nil (25937 12712 515306 884000) 0 nil])
([nil nil ((547 . 551) (#("_" 0 1 (face font-lock-variable-name-face fontified nil)) . 547) (546 . 547)) nil (25937 12712 515304 998000) 0 nil])
([nil nil ((apply yas--snippet-revive 523 552 #s(yas--snippet nil (#s(yas--field 1 534 538 nil nil nil t #s(yas--field 2 540 544 nil nil nil t #s(yas--field 3 546 551 nil nil nil t #s(yas--exit 552 nil)))) #s(yas--field 2 540 544 nil nil nil t #s(yas--field 3 546 551 nil nil nil t #s(yas--exit 552 nil))) #s(yas--field 3 546 551 nil nil nil t #s(yas--exit 552 nil))) #s(yas--exit 552 nil) 5 nil #s(yas--field 3 546 551 nil nil nil t #s(yas--exit 552 nil)) nil nil))) nil (25937 12712 515303 601000) 0 nil])
([nil nil ((552 . 553)) nil (25937 12712 515302 204000) 0 nil])
([nil nil ((553 . 558)) nil (25937 12712 515300 737000) 0 nil])
([nil nil ((558 . 558) (558 . 561)) nil (25937 12712 515299 341000) 0 nil])
([nil nil ((569 . 579) (561 . 570)) nil (25937 12712 515298 14000) 0 nil])
([nil nil ((579 . 584)) nil (25937 12712 515296 617000) 0 nil])
([nil nil ((585 . 586)) nil (25937 12712 515295 220000) 0 nil])
([nil nil ((586 . 591)) nil (25937 12712 515293 753000) 0 nil])
([nil nil ((602 . 607) (596 . 603) (591 . 591) (591 . 596)) nil (25937 12712 515292 357000) 0 nil])
([nil nil ((607 . 619)) nil (25937 12712 515290 960000) 0 nil])
([nil nil ((620 . 621)) nil (25937 12712 515289 493000) 0 nil])
([nil nil ((621 . 626)) nil (25937 12712 515288 96000) 0 nil])
([nil nil ((626 . 628)) nil (25937 12712 515286 699000) 0 nil])
([nil nil ((#("m" 0 1 (fontified t)) . -626) (undo-tree-id458 . -1) (undo-tree-id459 . -1) (#("e" 0 1 (fontified t)) . -627) (undo-tree-id460 . -1) 628) nil (25937 12712 515285 233000) 0 nil])
([nil nil ((apply yas--take-care-of-redo #s(yas--snippet nil (#s(yas--field 1 638 648 nil nil nil t #s(yas--field 2 650 661 nil nil nil t #s(yas--field 3 663 666 nil nil nil t #s(yas--exit 667 nil)))) #s(yas--field 2 650 661 nil nil nil t #s(yas--field 3 663 666 nil nil nil t #s(yas--exit 667 nil))) #s(yas--field 3 663 666 nil nil nil t #s(yas--exit 667 nil))) #s(yas--exit 667 nil) 6 nil #s(yas--field 3 663 666 nil nil nil t #s(yas--exit 667 nil)) nil nil)) (626 . 646) (#("sorting_two/3" 0 13 (fontified nil)) . -626) (undo-tree-id445 . -11) (undo-tree-id446 . -11) (undo-tree-id447 . -11) (undo-tree-id448 . -11) (undo-tree-id449 . -11) (undo-tree-id450 . -11) (undo-tree-id451 . -11) (undo-tree-id452 . -11) (undo-tree-id453 . -11) (undo-tree-id454 . -11) (undo-tree-id455 . -11) (undo-tree-id456 . -11) (undo-tree-id457 . -11) (637 . 639) (629 . 637) (626 . 626) (626 . 629)) nil (25937 12712 515282 299000) 0 nil])
([nil nil ((641 . 642) (639 . 639) (639 . 641) (#("_" 0 1 (face font-lock-variable-name-face fontified nil)) . 639) (undo-tree-id443 . -1) (undo-tree-id444 . 1) (638 . 639)) nil (25937 12712 515275 245000) 0 nil])
([nil nil ((642 . 648)) nil (25937 12712 515272 382000) 0 nil])
([nil nil ((651 . 661) (#("_" 0 1 (face font-lock-variable-name-face fontified nil)) . 651) (undo-tree-id442 . -1) (650 . 651)) nil (25937 12712 515270 915000) 0 nil])
([nil nil ((664 . 666) (#("_" 0 1 (face font-lock-variable-name-face fontified nil)) . 664) (undo-tree-id441 . -1) (663 . 664)) nil (25937 12712 515268 610000) 0 nil])
([nil nil ((apply yas--snippet-revive 626 667 #s(yas--snippet nil (#s(yas--field 1 638 648 nil nil nil t #s(yas--field 2 650 661 nil nil nil t #s(yas--field 3 663 666 nil nil nil t #s(yas--exit 667 nil)))) #s(yas--field 2 650 661 nil nil nil t #s(yas--field 3 663 666 nil nil nil t #s(yas--exit 667 nil))) #s(yas--field 3 663 666 nil nil nil t #s(yas--exit 667 nil))) #s(yas--exit 667 nil) 6 nil #s(yas--field 3 663 666 nil nil nil t #s(yas--exit 667 nil)) nil nil))) nil (25937 12712 515261 137000) 0 nil])
([nil nil ((667 . 668)) nil (25937 12712 515257 366000) 0 nil])
([nil current ((515 . 516) (t 25937 12712 532052 736000)) nil (26059 37188 658399 575000) 0 nil])
nil
